var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.333,1,0.863]],["body/components/App.html",[0,0.581,1,1.762,2,1.653,3,0.491,4,0.43,5,1.586,6,1.586,7,1.586,8,0.392,9,3.377,10,1.452,11,2.079,12,1.804,13,1.653,14,5.491,15,1.971,16,5.047,17,5.047,18,5.047,19,0.316,20,0.689,21,5.491,22,5.491,23,0.316,24,0.035,25,0.767,26,1.218,27,0.93,28,2.882,29,3.216,30,0.93,31,4.062,32,0.663,33,0.43,34,1.735,35,1.653,36,2.926,37,0.491,38,0.491,39,1.586,40,1.971,41,1.971,42,1.586,43,2.243,44,1.586,45,0.689,46,1.452,47,1.586,48,1.452,49,1.586,50,1.586,51,1.218,52,1.33,53,1.586,54,1.33,55,1.586,56,1.33,57,1.586,58,1.586,59,1.33,60,1.33,61,1.586,62,1.33,63,1.586,64,1.33,65,1.586,66,1.33,67,1.586,68,1.586,69,1.155,70,1.452,71,1.586,72,0.027,73,0.027]],["title/guards/AuthGuard.html",[74,2.265,75,2.004]],["body/guards/AuthGuard.html",[3,0.494,4,0.433,8,0.318,12,1.812,19,0.318,23,0.394,24,0.035,30,1.16,32,0.665,33,0.433,34,1.747,37,0.612,38,0.612,45,0.692,72,0.027,73,0.027,75,3.23,76,2.946,77,2.946,78,1.52,79,4.92,80,1.382,81,2.606,82,3.186,83,2.432,84,4.09,85,1.272,86,0.864,87,4.579,88,4.92,89,4.786,90,4.92,91,4.09,92,3.4,93,1.123,94,1.747,95,1.512,96,2.11,97,1.979,98,2.165,99,1.087,100,4.214,101,2.606,102,3.4,103,3.4,104,3.4,105,1.58,106,1.391,107,0.692,108,2.606,109,3.4,110,2.606]],["title/injectables/AuthService.html",[83,1.228,95,0.863]],["body/injectables/AuthService.html",[3,0.427,4,0.374,8,0.274,12,1.262,19,0.274,20,0.63,23,0.424,24,0.035,25,1.096,30,1.373,32,0.684,33,0.374,34,1.509,37,0.427,38,0.427,45,0.63,72,0.025,73,0.025,78,1.384,80,1.158,81,2.251,82,2.994,83,1.803,85,1.158,86,0.787,93,1.497,94,2.33,95,1.267,97,1.379,99,1.068,101,2.251,105,1.623,106,0.969,107,0.482,111,2.251,112,2.936,113,4.534,114,3.704,115,5.143,116,4.534,117,5.454,118,3.838,119,3.928,120,3.838,121,5.143,122,1.774,123,4.616,124,3.532,125,3.532,126,4.616,127,2.652,128,3.532,129,1.509,130,2.919,131,3.532,132,1.262,133,3.704,134,3.532,135,3.532,136,3.532,137,1.379,138,1.822,139,2.017,140,1.822,141,2.017,142,2.075,143,2.936,144,2.017,145,3.532,146,0.886,147,3.532,148,2.936,149,3.532,150,3.532,151,3.532,152,3.532,153,3.532,154,0.969,155,4.616,156,3.532,157,3.532,158,1.803,159,3.532,160,3.532,161,3.532,162,2.017,163,3.532,164,3.532,165,2.936,166,3.532,167,3.532,168,3.838,169,4.616,170,3.532,171,3.532,172,3.532,173,2.017,174,2.936,175,1.384,176,3.532,177,3.532,178,3.532,179,2.544,180,3.532,181,3.532,182,3.532,183,3.532,184,1.655]],["title/interfaces/FManageDB.html",[185,0.72,186,1.623]],["body/interfaces/FManageDB.html",[3,0.302,4,0.264,8,0.418,12,0.893,19,0.194,20,0.496,23,0.418,24,0.035,25,1.185,27,0.832,32,0.604,33,0.264,37,0.518,38,0.302,45,0.496,69,1.077,72,0.02,73,0.02,80,0.627,95,0.998,97,0.976,99,0.985,105,1.646,106,0.998,107,0.496,122,0.75,127,1.171,129,2.01,130,3.071,137,0.976,138,1.875,139,1.427,140,1.875,141,1.427,142,2.19,146,1.35,154,1.291,158,1.673,162,1.427,173,2.854,175,1.771,184,1.171,185,0.981,186,1.875,187,1.171,188,1.427,189,1.427,190,2.317,191,2.73,192,2.26,193,2.998,194,1.593,195,2.73,196,1.427,197,1.593,198,3.341,199,1.171,200,1.427,201,1.427,202,1.553,203,2.317,204,1.682,205,3.64,206,1.289,207,1.427,208,1.427,209,1.171,210,1.427,211,2.076,212,2.402,213,2.446,214,0.75,215,1.171,216,1.83,217,1.427,218,1.875,219,2.076,220,2.317,221,2.076,222,2.076,223,1.593,224,1.427,225,1.593,226,0.627,227,2.317,228,1.593,229,1.593,230,1.593,231,1.593,232,1.289,233,2.317,234,1.593,235,1.593,236,1.593,237,1.593,238,1.593,239,1.593,240,1.593,241,2.317,242,2.317,243,1.593,244,2.317,245,1.593,246,1.593,247,1.593,248,2.317,249,1.593,250,1.593,251,2.444,252,1.427,253,1.593,254,3.514,255,1.593,256,1.593,257,1.593,258,1.593,259,1.593,260,2.076,261,3.687,262,1.593,263,2.317,264,2.317,265,2.317,266,1.593,267,2.73,268,2.317,269,1.593,270,1.593,271,1.593,272,2.317,273,1.593,274,1.593,275,1.593,276,1.593,277,1.593,278,3.323,279,1.593,280,1.593,281,2.317,282,1.593,283,1.593,284,1.593,285,1.593,286,1.593,287,0.572,288,1.593,289,2.317,290,1.427,291,1.593,292,1.593,293,2.317,294,1.593,295,2.317,296,1.593,297,2.076,298,1.593,299,1.593,300,1.593,301,1.593,302,1.427,303,1.593,304,1.593,305,1.593,306,1.593,307,1.593,308,2.317,309,1.593,310,1.593,311,1.593,312,2.317,313,1.593,314,2.317,315,1.593,316,1.593,317,1.593,318,1.593,319,1.593,320,1.289]],["title/interfaces/File.html",[8,0.244,185,0.72]],["body/interfaces/File.html",[3,0.288,4,0.252,8,0.423,12,0.852,19,0.185,20,0.479,23,0.459,24,0.035,25,1.205,27,0.804,32,0.592,33,0.252,37,0.504,38,0.288,45,0.669,69,0.545,72,0.019,73,0.019,80,0.598,86,0.928,95,0.964,97,0.931,99,0.968,105,1.633,106,0.964,107,0.479,122,0.715,127,1.117,129,1.965,130,3.046,137,0.931,138,1.811,139,1.361,140,1.811,141,1.361,142,2.176,146,1.33,154,1.262,158,1.628,162,1.361,173,2.799,175,1.756,184,1.117,185,0.954,186,1.229,187,1.117,188,1.361,189,1.361,190,1.519,191,2.237,192,2.125,194,1.519,195,2.656,196,1.361,197,1.519,198,3.309,199,1.117,200,1.361,201,1.361,202,1.5,203,2.237,204,1.896,205,3.731,206,1.229,207,1.361,208,1.361,209,1.117,210,1.361,211,2.005,212,2.501,213,2.38,214,1.379,215,2.155,216,2.191,217,2.38,218,2.529,219,2.799,220,3.124,221,2.005,222,2.005,223,1.519,224,1.361,225,1.519,226,0.598,227,2.237,228,1.519,229,1.519,230,1.519,231,1.519,232,1.229,233,2.237,234,1.519,235,1.519,236,1.519,237,1.519,238,1.519,239,1.519,240,1.519,241,2.237,242,2.237,243,1.519,244,2.237,245,1.519,246,1.519,247,1.519,248,2.237,249,1.519,250,1.519,251,2.403,252,1.361,253,1.519,254,3.468,255,1.519,256,1.519,257,1.519,258,1.519,259,1.519,260,2.005,261,3.65,262,1.519,263,2.237,264,2.237,265,2.237,266,1.519,267,2.656,268,2.237,269,1.519,270,1.519,271,1.519,272,2.237,273,1.519,274,1.519,275,1.519,276,1.519,277,1.519,278,3.268,279,1.519,280,1.519,281,2.237,282,1.519,283,1.519,284,1.519,285,1.519,286,1.519,287,0.545,288,1.519,289,2.237,290,1.361,291,1.519,292,1.519,293,2.237,294,1.519,295,2.237,296,1.519,297,2.005,298,1.519,299,1.519,300,1.519,301,1.519,302,1.361,303,1.519,304,1.519,305,1.519,306,1.519,307,1.519,308,2.237,309,1.519,310,1.519,311,1.519,312,2.237,313,1.519,314,2.237,315,1.519,316,1.519,317,1.519,318,1.519,319,1.519,320,1.229]],["title/components/FilesCompoenent.html",[0,0.333,54,1.03]],["body/components/FilesCompoenent.html",[0,0.296,1,1.41,2,0.709,3,0.262,4,0.137,5,0.505,6,0.505,7,0.505,8,0.432,10,0.462,11,1.653,13,0.709,15,0.845,19,0.1,20,0.296,23,0.446,24,0.035,25,0.527,26,1.623,27,1.239,30,1.354,32,0.621,33,0.137,35,1.07,36,0.931,37,0.156,38,0.44,39,0.505,40,0.845,41,0.845,42,0.505,43,2.114,44,0.505,45,0.712,46,0.462,47,0.505,48,0.462,49,0.505,50,0.505,51,0.98,52,0.423,53,0.505,54,1.07,55,0.505,56,0.915,57,0.505,58,0.505,59,0.423,60,1.191,61,0.505,62,0.423,63,0.505,64,1.07,65,0.505,66,1.07,67,1.421,68,0.505,69,0.495,70,0.462,71,0.505,72,0.012,73,0.012,78,0.649,80,0.543,83,1.537,85,1.144,86,0.777,93,1.386,96,0.667,98,0.925,99,0.527,105,1.204,106,0.355,107,0.296,114,2.621,119,2.621,122,0.98,132,1.805,137,0.505,138,0.667,140,0.667,142,0.462,144,0.738,146,1.049,148,1.074,154,1.486,175,1.315,184,0.606,192,1.838,193,1.38,198,0.738,202,2.114,204,1.168,212,1.194,214,1.412,215,1.014,216,0.552,217,0.738,219,1.236,222,1.595,226,0.82,232,0.667,251,1.014,287,0.495,302,1.236,320,0.667,321,0.552,322,1.074,323,1.595,324,3.268,325,0.774,326,1.091,327,2.012,328,0.925,329,2.794,330,2.165,331,1.78,332,1.78,333,1.78,334,2.835,335,2.794,336,2.794,337,1.78,338,2.794,339,3.268,340,2.322,341,2.794,342,2.794,343,2.794,344,2.794,345,2.794,346,2.322,347,2.717,348,1.8,349,2.165,350,3.268,351,1.866,352,1.8,353,2.165,354,1.8,355,1.8,356,2.165,357,3.268,358,2.165,359,1.074,360,1.595,361,1.786,362,1.292,363,1.292,364,2.165,365,1.292,366,2.165,367,1.292,368,1.292,369,1.292,370,1.292,371,1.8,372,1.292,373,2.934,374,2.165,375,1.292,376,1.38,377,2.082,378,1.292,379,1.8,380,1.292,381,2.165,382,1.292,383,1.292,384,2.165,385,1.866,386,1.292,387,2.717,388,1.441,389,3.02,390,4.707,391,2.248,392,1.845,393,2.717,394,1.8,395,2.165,396,3.39,397,1.8,398,1.292,399,1.441,400,2.038,401,2.165,402,2.165,403,2.794,404,1.8,405,1.292,406,1.38,407,1.292,408,1.292,409,1.292,410,2.761,411,1.292,412,2.664,413,2.165,414,2.794,415,1.292,416,1.292,417,1.866,418,1.292,419,1.559,420,1.292,421,2.621,422,1.8,423,2.717,424,2.354,425,3.476,426,2.165,427,2.165,428,1.292,429,1.292,430,1.292,431,2.165,432,1.292,433,1.292,434,1.292,435,1.292,436,2.165,437,1.292,438,2.165,439,1.292,440,0.462,441,0.738,442,1.074,443,0.738,444,2.078,445,0.824,446,1.292,447,0.824,448,0.931,449,0.931,450,1.292,451,1.292,452,0.931,453,1.074,454,0.824,455,0.824,456,0.931,457,0.931,458,1.8,459,2.165,460,1.074,461,1.292,462,1.292,463,1.292,464,1.292,465,1.292,466,1.292,467,1.292,468,1.292,469,1.292,470,1.292,471,1.074,472,1.236,473,1.292,474,3.025,475,3.025,476,1.074,477,1.074,478,1.292,479,3.268,480,3.268,481,1.292,482,1.292,483,3.273,484,1.074,485,2.794,486,1.292,487,1.292,488,1.292,489,1.292,490,1.292,491,1.292,492,1.292,493,1.292,494,2.165,495,1.292,496,2.031,497,1.595,498,1.559,499,1.074,500,3.268,501,1.292,502,1.292,503,1.292,504,1.074,505,1.074,506,0.824,507,1.292,508,1.074,509,2.165,510,1.292,511,1.8,512,1.292,513,1.292,514,1.292,515,0.824,516,2.165,517,1.292,518,1.292,519,1.292,520,1.074,521,1.292,522,1.292,523,1.292,524,1.292,525,1.292,526,1.292,527,1.292,528,1.292,529,1.074,530,1.074,531,1.074,532,1.292,533,1.292,534,1.074,535,1.074,536,0.931,537,1.074,538,0.824,539,1.074,540,1.074,541,1.292,542,1.292,543,0.824,544,0.931,545,0.931,546,1.947,547,0.824,548,1.78,549,1.866,550,0.606,551,0.824,552,2.478,553,2.467,554,1.194,555,2.319,556,1.78,557,1.441,558,1.559,559,2.206,560,1.866,561,1.559,562,2.114,563,1.236,564,0.931,565,1.074,566,1.874,567,1.633,568,1.786,569,2.262,570,1.877,571,3.283,572,2.082,573,3.639,574,3.025,575,2.677,576,2.248,577,2.266,578,2.031,579,2.248,580,2.248,581,1.292,582,2.078,583,2.031,584,0.931,585,1.8,586,0.931,587,1.292,588,1.531,589,2.165,590,2.165,591,1.292,592,1.292,593,0.925,594,1.686,595,0.931,596,2.266,597,1.866,598,1.292,599,1.292,600,2.031,601,0.824,602,1.292,603,1.531,604,1.236,605,1.8,606,1.074,607,1.074,608,0.931,609,1.8,610,2.165,611,1.38,612,0.824,613,3.639,614,2.082,615,2.012,616,2.509,617,1.117,618,1.559,619,1.292,620,1.292,621,1.292,622,1.292,623,1.292,624,1.117,625,1.78,626,1.292,627,2.165,628,2.319,629,1.292,630,1.292,631,2.165,632,1.074,633,1.236,634,0.738,635,1.559,636,1.014,637,0.824,638,0.552,639,1.38,640,1.292,641,0.738,642,0.931,643,1.236,644,0.552,645,0.824,646,0.931,647,1.074,648,1.074,649,0.931,650,1.074,651,0.824,652,1.074,653,0.931,654,0.738,655,1.292,656,0.738,657,0.738,658,1.074,659,1.8]],["title/components/FooterComponent.html",[0,0.333,56,1.03]],["body/components/FooterComponent.html",[0,0.503,1,1.684,2,1.361,3,0.365,4,0.319,5,1.623,6,1.179,7,1.179,8,0.323,10,1.079,11,1.996,13,1.361,19,0.235,20,0.567,24,0.035,26,0.905,27,0.691,28,2.713,29,3.028,30,0.691,32,0.502,33,0.319,35,0.989,37,0.365,38,0.365,39,1.179,40,1.623,41,1.623,42,1.179,43,1.999,44,1.179,45,0.567,46,1.079,47,1.179,48,1.079,49,1.179,50,1.179,51,0.905,52,0.989,53,1.179,54,0.989,55,1.179,56,1.676,57,1.179,58,1.179,59,0.989,60,0.989,61,1.179,62,0.989,63,1.179,64,0.989,65,1.179,66,0.989,67,1.179,68,1.179,69,0.951,70,1.079,71,1.179,72,0.022,73,0.022,107,0.567,146,1.043,214,1.425,287,1.429,321,2.03,325,1.485,326,1.856,400,2.294,440,1.079,546,2.03,549,2.713,550,2.599,553,2.03,554,2.03,555,2.753,557,2.861,558,3.422,559,2.226,560,2.713,562,2.51,566,2.37,567,2.166,568,2.37,569,2.451,570,2.861,588,2.226,594,2.451,596,2.226,611,3.028,617,2.861,634,3.167,636,2.226,638,2.03,654,2.713,656,3.167,657,3.167,660,2.51,661,6.284,662,3.422,663,3.422,664,3.95,665,4.752,666,4.752,667,3.95,668,3.422,669,3.95,670,3.95,671,5.547,672,3.95,673,3.95,674,4.155,675,3.019,676,3.019]],["title/components/HeaderComponent.html",[0,0.333,35,1.03]],["body/components/HeaderComponent.html",[0,0.454,1,1.635,2,1.192,3,0.303,4,0.265,5,0.978,6,0.978,7,0.978,8,0.283,10,0.895,11,1.934,13,1.192,15,1.421,19,0.333,20,0.497,23,0.195,24,0.035,26,1.092,27,0.981,28,2.078,29,2.319,30,1.263,32,0.518,33,0.265,34,1.07,35,1.541,37,0.303,38,0.303,39,0.978,40,1.421,41,1.421,42,0.978,43,1.838,44,0.978,45,0.586,46,0.895,47,0.978,48,0.895,49,0.978,50,0.978,51,0.751,52,0.82,53,0.978,54,0.82,55,0.978,56,0.82,57,0.978,58,0.978,59,0.82,60,0.82,61,0.978,62,0.82,63,0.978,64,0.82,65,0.978,66,0.82,67,0.978,68,0.978,69,1.077,70,0.895,71,0.978,72,0.02,73,0.02,78,1.092,80,0.913,82,2.778,83,2.038,85,0.628,86,0.427,93,1.373,96,1.291,98,1.555,99,0.687,106,0.999,107,0.497,110,1.595,116,4.158,119,3.974,132,1.788,192,1.421,214,1.412,226,0.628,287,1.325,321,1.07,323,2.449,325,1.301,328,1.555,351,2.688,359,2.081,400,2.103,410,1.43,417,2.078,520,3.026,540,2.081,546,2.357,547,2.319,550,2.009,552,2.585,553,2.229,554,1.555,555,2.445,557,1.291,559,2.523,560,1.43,561,3.391,562,2.229,563,1.43,564,1.803,565,2.081,566,2.011,567,1.675,568,1.832,569,1.291,570,2.428,571,1.803,572,2.319,575,2.523,576,2.688,577,2.343,578,2.212,579,2.078,580,2.078,582,1.43,583,1.291,588,2.206,593,1.555,594,2.212,596,2.523,597,2.449,600,1.877,603,1.705,611,3.187,612,1.595,614,3.187,616,3.431,624,2.428,625,2.319,628,2.733,632,3.026,633,2.856,636,2.009,637,2.319,638,1.07,641,1.43,642,1.803,644,1.555,649,1.803,651,1.595,654,1.43,656,2.078,657,2.078,663,2.621,667,3.026,668,3.391,669,3.026,677,2.081,678,4.288,679,4.288,680,3.64,681,4.288,682,4.708,683,4.708,684,4.708,685,3.64,686,2.504,687,2.504,688,2.504,689,2.504,690,2.504,691,2.504,692,2.504,693,2.504,694,2.504,695,2.504,696,2.504,697,3.64,698,3.64,699,3.026,700,2.504,701,1.803,702,2.081,703,2.504,704,2.504,705,2.504,706,4.288,707,2.504,708,3.64,709,3.64,710,2.504,711,4.708,712,2.504,713,3.026,714,3.64,715,3.565,716,3.64,717,3.64,718,2.504,719,2.504,720,2.504,721,3.64,722,2.319,723,2.504,724,2.504,725,2.621,726,2.621,727,2.504,728,2.504,729,2.504,730,2.504,731,2.081,732,2.081,733,2.504,734,3.64,735,3.026,736,3.64,737,1.803,738,2.504,739,2.504,740,2.504,741,2.504,742,3.64,743,1.803]],["title/injectables/IndexedDBService.html",[95,0.863,122,0.943]],["body/injectables/IndexedDBService.html",[3,0.251,4,0.22,8,0.406,12,0.742,19,0.161,20,0.432,23,0.447,24,0.035,25,1.195,26,1.15,27,1.057,30,1.358,32,0.558,33,0.22,37,0.463,38,0.251,45,0.758,69,0.475,72,0.017,73,0.017,78,0.949,80,0.962,85,1.342,86,0.912,93,1.563,95,0.868,97,0.81,99,1.12,105,1.594,106,0.868,107,0.432,111,1.322,122,0.949,127,0.972,129,1.974,130,3.177,137,0.81,138,1.632,139,1.184,140,1.632,141,1.184,142,2.145,146,1.27,154,1.178,158,1.804,162,1.184,173,2.638,175,1.708,184,0.972,185,0.878,186,1.07,188,3.408,189,1.184,190,1.322,191,2.016,192,2.038,194,1.322,195,2.734,196,1.184,197,1.322,198,3.212,199,0.972,200,1.184,201,1.184,202,1.352,203,2.016,204,1.534,205,3.628,206,1.07,207,1.184,208,1.184,209,0.972,210,1.184,211,1.806,212,2.285,213,2.19,214,0.622,215,0.972,216,1.974,217,1.184,218,1.632,219,1.806,220,2.016,221,2.638,222,2.78,223,2.444,224,1.806,225,2.444,226,0.794,227,2.734,228,1.322,229,1.322,230,2.444,231,2.734,232,1.07,233,2.016,234,1.322,235,1.322,236,1.322,237,1.322,238,1.322,239,1.322,240,1.322,241,2.016,242,2.016,243,1.322,244,2.016,245,1.322,246,1.322,247,1.322,248,2.016,249,1.322,250,1.322,251,2.281,252,1.184,253,1.322,254,3.326,255,2.734,256,1.322,257,1.322,258,1.322,259,2.016,260,2.78,261,3.535,262,1.322,263,2.016,264,2.016,265,2.016,266,2.016,267,2.444,268,2.016,269,1.322,270,1.322,271,1.322,272,2.016,273,2.734,274,2.016,275,1.322,276,2.016,277,1.322,278,3.326,279,1.322,280,1.322,281,2.016,282,1.322,283,1.322,284,1.322,285,1.322,286,1.322,287,0.475,288,1.322,289,2.016,290,1.184,291,2.016,292,1.322,293,2.016,294,1.322,295,2.016,296,1.322,297,1.806,298,1.322,299,1.322,300,1.322,301,1.322,302,1.184,303,2.734,304,2.016,305,1.322,306,2.016,307,2.016,308,2.016,309,2.016,310,2.444,311,1.322,312,2.016,313,1.322,314,2.016,315,1.322,316,1.322,317,1.322,318,2.016,319,1.322,320,1.07,348,2.63,744,3.164,745,3.164,746,3.164,747,3.164,748,3.164,749,3.164,750,3.164,751,3.164,752,3.164,753,2.074,754,2.074,755,2.074,756,2.074,757,2.074,758,2.074,759,2.074,760,2.074,761,2.074,762,2.074,763,2.074,764,2.074,765,2.074,766,2.074,767,2.074,768,1.494,769,2.074]],["title/components/LoadingScreenComponent.html",[0,0.333,59,1.03]],["body/components/LoadingScreenComponent.html",[0,0.48,1,1.662,2,1.281,3,0.335,4,0.293,5,1.528,6,1.081,7,1.081,8,0.304,10,0.99,11,1.969,13,1.281,19,0.215,20,0.534,23,0.304,24,0.035,25,0.739,26,0.831,27,0.634,30,1.128,32,0.628,33,0.293,34,1.183,35,0.907,37,0.335,38,0.335,39,1.081,40,1.528,41,1.528,42,1.081,43,1.925,44,1.081,45,0.62,46,0.99,47,1.081,48,0.99,49,1.081,50,1.081,51,0.831,52,0.907,53,1.081,54,0.907,55,1.081,56,0.907,57,1.081,58,1.081,59,1.614,60,1.887,61,1.081,62,0.907,63,1.081,64,0.907,65,1.081,66,0.907,67,1.081,68,1.081,69,0.895,70,0.99,71,1.081,72,0.021,73,0.021,78,1.173,80,0.982,81,1.765,82,2.784,85,0.695,86,0.472,93,1.074,98,1.672,99,0.982,101,1.765,122,1.478,132,1.399,144,1.581,158,1.925,175,1.752,199,2.437,200,1.581,201,1.581,252,2.59,287,1.038,321,1.938,323,2.59,326,1.772,351,2.815,360,2.59,400,1.772,440,0.99,445,1.765,472,1.581,538,1.765,546,1.938,548,2.891,550,2.529,551,2.891,552,2.126,553,2.306,554,2.306,559,2.529,560,2.59,562,1.938,563,2.59,566,2.306,567,1.772,568,2.462,575,2.7,577,2.126,583,2.784,588,2.126,593,1.938,603,2.529,604,1.581,617,2.34,638,1.938,643,2.59,644,2.306,663,3.888,770,4.323,771,4.323,772,2.302,773,3.912,774,4.537,775,3.267,776,4.487,777,4.537,778,4.537,779,4.537,780,5.398,781,4.537,782,4.537,783,4.537,784,4.537,785,4.537,786,4.537,787,4.537,788,4.93,789,3.912,790,2.769,791,2.769,792,2.769,793,2.769,794,3.252,795,2.769,796,2.769,797,3.912,798,2.302,799,2.769,800,2.769]],["title/components/LoginComponent.html",[0,0.333,62,1.03]],["body/components/LoginComponent.html",[0,0.406,1,1.58,2,1.036,3,0.251,4,0.22,5,0.811,6,0.811,7,0.811,8,0.246,10,0.742,11,1.865,13,1.036,15,1.236,19,0.246,20,0.432,23,0.298,24,0.035,25,0.392,26,1.287,27,0.982,28,2.191,30,1.27,32,0.588,33,0.22,34,0.887,35,0.68,37,0.251,38,0.251,39,0.811,40,1.236,41,1.236,42,0.811,43,2.303,44,0.811,45,0.524,46,0.742,47,0.811,48,0.742,49,0.811,50,0.811,51,0.623,52,0.68,53,0.811,54,0.68,55,0.811,56,1.405,57,0.811,58,0.811,59,0.68,60,1.405,61,0.811,62,1.405,63,0.811,64,0.68,65,0.811,66,0.68,67,0.811,68,0.811,69,0.724,70,0.742,71,0.811,72,0.017,73,0.017,78,0.949,80,0.794,82,2.612,83,1.978,85,0.521,86,0.354,93,1.178,94,0.887,96,1.071,98,1.352,99,0.724,105,1.268,106,1.337,107,0.692,110,1.323,118,4.678,120,2.632,127,2.557,129,2.331,132,1.372,154,1.053,158,1.236,174,1.726,175,1.708,209,1.483,214,1.46,226,0.963,287,0.724,321,1.352,323,2.191,325,1.132,326,1.498,328,1.352,351,2.451,389,1.185,392,0.973,400,2.197,440,0.742,441,1.185,452,1.495,472,1.185,496,1.979,538,2.017,543,1.323,544,1.495,545,1.495,546,2.08,547,2.017,548,2.945,549,2.638,550,2.165,551,1.323,552,2.373,553,2.576,554,1.834,555,2.282,556,1.323,557,1.633,559,2.282,562,2.231,563,2.191,566,1.639,567,1.236,568,1.974,569,2.383,574,3.19,575,2.557,576,1.185,577,1.798,578,1.979,579,2.191,580,1.807,582,1.807,583,1.633,585,1.726,586,1.495,588,2.446,593,1.639,594,1.071,595,1.495,596,2.373,597,1.185,600,1.633,601,2.017,603,2.165,605,2.632,606,1.726,608,1.495,617,1.633,624,1.071,633,1.807,634,1.807,635,3.091,636,2.373,637,2.735,638,1.974,639,1.323,641,2.191,643,1.807,644,0.887,645,1.323,653,1.495,654,1.185,656,1.807,657,1.807,658,1.726,664,1.726,668,2.28,670,1.726,672,2.632,673,2.632,699,3.841,701,1.495,702,1.726,715,2.632,722,1.323,725,1.495,726,1.495,737,1.495,743,2.28,776,2.632,794,2.632,798,3.19,801,1.726,802,3.19,803,3.837,804,3.165,805,3.837,806,3.837,807,3.837,808,4.292,809,3.568,810,4.292,811,2.076,812,4.048,813,3.165,814,2.076,815,3.165,816,3.165,817,2.076,818,2.076,819,2.076,820,2.076,821,2.076,822,3.19,823,2.076,824,2.076,825,2.076,826,2.076,827,1.726,828,2.076,829,2.076,830,3.165,831,2.076,832,2.076,833,2.076,834,2.076,835,2.076,836,2.076,837,2.076,838,3.165,839,2.076,840,2.076,841,2.076,842,3.837,843,2.076,844,2.076,845,3.837,846,2.076,847,2.076,848,3.165,849,4.292,850,3.165,851,3.165,852,3.165,853,3.165,854,3.165,855,2.076,856,3.165,857,2.763,858,2.076,859,2.076,860,2.076,861,2.076,862,5.349,863,2.076,864,2.076,865,2.076,866,2.076,867,3.165,868,2.076,869,2.076,870,2.076,871,2.076,872,2.076,873,2.076,874,2.076,875,2.076,876,2.076,877,2.076,878,2.076,879,1.726,880,1.726,881,2.076,882,2.076,883,2.076,884,2.076,885,2.076]],["title/guards/LoginGuard.html",[74,2.265,108,2.004]],["body/guards/LoginGuard.html",[3,0.494,4,0.433,8,0.318,12,1.812,19,0.318,23,0.394,24,0.035,30,1.16,32,0.665,33,0.433,34,1.747,37,0.612,38,0.612,45,0.692,72,0.027,73,0.027,75,2.606,76,2.946,77,2.946,78,1.52,79,4.92,80,1.382,81,2.606,82,3.186,83,2.432,85,1.272,86,0.864,87,4.579,88,4.92,89,4.786,90,4.92,92,3.4,93,1.123,94,1.747,95,1.512,96,2.11,97,1.979,98,2.165,99,1.087,100,4.214,101,2.606,102,3.4,103,3.4,104,3.4,105,1.58,106,1.391,107,0.692,108,3.23,109,3.4,110,2.606,886,4.09,887,4.09]],["title/pipes/PhoneNumberPipe.html",[888,2.004,889,2.265]],["body/pipes/PhoneNumberPipe.html",[3,0.544,4,0.477,8,0.35,10,1.61,23,0.35,24,0.035,25,1.148,27,1.315,30,1.031,32,0.544,33,0.477,37,0.544,38,0.544,45,0.785,72,0.029,73,0.029,78,1.351,85,1.13,86,0.768,93,1.236,98,1.925,105,1.577,107,0.734,154,1.236,297,2.572,325,1.921,644,1.925,888,3.425,889,3.871,890,3.745,891,4.468,892,3.745,893,5.375,894,5.375,895,4.505,896,5.375,897,4.505,898,4.505,899,4.505,900,4.505,901,3.745,902,4.505,903,3.745,904,4.505]],["title/interfaces/TableAction.html",[185,0.72,388,1.623]],["body/interfaces/TableAction.html",[0,0.462,1,0.891,3,0.392,4,0.344,8,0.252,11,1.063,13,1.063,15,1.268,19,0.252,20,0.596,23,0.428,24,0.035,25,1.188,32,0.7,33,0.344,37,0.596,38,0.665,51,0.974,52,1.615,60,1.063,72,0.023,73,0.023,86,0.899,94,1.387,99,1.112,105,1.655,107,0.443,132,1.161,146,0.815,154,1.448,179,3.144,185,0.999,187,1.521,202,1.387,212,1.387,216,1.865,226,0.815,287,0.999,325,1.161,326,1.705,328,1.387,331,2.782,332,2.069,333,2.069,337,3.143,373,1.854,376,2.069,377,2.782,388,2.252,389,3.143,391,3.237,392,2.472,399,1.675,400,1.268,406,2.069,410,3.012,412,2.782,417,1.854,419,2.338,440,1.161,443,1.854,444,1.854,447,2.069,457,2.338,496,2.252,497,1.854,506,2.782,515,2.069,593,1.387,604,2.816,768,3.553,775,2.338,905,2.338,906,2.338,907,3.144,908,3.144,909,3.629,910,2.699,911,3.629,912,3.629,913,2.699,914,3.629,915,2.699,916,3.629,917,2.699,918,2.699,919,2.699,920,2.699,921,2.699,922,2.699,923,2.699,924,2.699,925,2.699,926,2.699,927,2.699,928,2.699,929,2.699,930,2.699,931,2.699,932,2.699,933,2.699,934,2.699,935,2.699,936,2.699,937,2.699,938,2.699,939,4.101,940,2.699,941,2.699,942,3.629,943,3.629,944,4.101,945,2.699,946,2.699,947,2.699,948,2.069,949,2.699,950,2.699,951,2.699,952,2.699,953,2.699,954,2.699,955,2.699,956,2.699,957,2.699,958,3.629,959,3.629,960,3.629,961,2.699,962,3.629,963,2.699,964,2.699,965,2.699,966,2.699,967,2.699,968,2.699]],["title/interfaces/TableColumn.html",[185,0.72,399,1.623]],["body/interfaces/TableColumn.html",[0,0.452,1,0.863,3,0.38,4,0.333,8,0.244,11,1.029,13,1.029,15,1.228,19,0.244,20,0.583,23,0.466,24,0.035,25,1.184,32,0.694,33,0.333,37,0.586,38,0.516,51,0.943,52,1.589,60,1.029,72,0.023,73,0.023,86,0.996,94,2.073,99,1.104,105,1.645,107,0.429,132,1.124,146,0.789,154,1.429,179,3.077,185,0.978,187,1.473,202,2.224,212,2.073,216,1.825,226,0.789,287,0.978,325,1.124,326,1.668,328,1.343,331,2.722,332,2.003,333,2.003,337,3.092,373,1.795,376,2.003,377,2.722,388,1.622,389,3.108,391,3.108,392,1.473,399,2.204,400,2.033,406,2.003,410,2.972,412,2.722,417,1.795,419,2.264,440,1.124,443,1.795,444,1.795,447,2.003,457,2.264,496,2.204,497,1.795,506,2.722,515,2.003,593,2.073,604,2.771,768,3.921,775,2.264,905,2.264,906,2.264,907,3.077,908,3.077,909,3.551,910,2.613,911,3.551,912,3.551,913,2.613,914,3.551,915,2.613,916,3.551,917,2.613,918,4.328,919,4.328,920,2.613,921,2.613,922,2.613,923,2.613,924,2.613,925,2.613,926,2.613,927,2.613,928,2.613,929,2.613,930,2.613,931,2.613,932,2.613,933,2.613,934,2.613,935,2.613,936,2.613,937,2.613,938,2.613,939,4.034,940,2.613,941,2.613,942,3.551,943,3.551,944,4.034,945,2.613,946,2.613,947,2.613,948,2.003,949,2.613,950,2.613,951,2.613,952,2.613,953,2.613,954,2.613,955,2.613,956,2.613,957,2.613,958,3.551,959,3.551,960,3.551,961,2.613,962,3.551,963,2.613,964,2.613,965,2.613,966,2.613,967,2.613,968,2.613]],["title/interfaces/Toast.html",[185,0.72,969,1.796]],["body/interfaces/Toast.html",[3,0.729,4,0.434,8,0.319,12,1.466,19,0.319,20,0.693,23,0.49,24,0.035,25,1.155,32,0.613,33,0.434,37,0.613,38,0.496,72,0.027,73,0.027,94,2.356,95,1.394,97,1.602,99,0.959,106,1.394,107,0.56,133,3.657,137,1.602,146,1.029,175,1.776,185,0.939,187,1.922,361,1.752,601,3.898,969,3.149,970,2.954,971,5.085,972,5.085,973,3.409,974,3.409,975,3.409,976,4.584,977,3.409,978,3.409,979,3.409,980,4.221,981,2.954,982,3.409,983,3.409,984,3.409]],["title/components/ToastComponent.html",[0,0.333,64,1.03]],["body/components/ToastComponent.html",[0,0.545,1,1.721,2,1.515,3,0.428,4,0.375,5,1.384,6,1.384,7,1.384,8,0.36,10,1.267,11,2.043,13,1.515,15,1.807,19,0.36,20,0.632,23,0.36,24,0.035,30,1.059,32,0.622,33,0.375,35,1.161,37,0.428,38,0.428,39,1.384,40,1.807,41,1.807,42,1.384,43,2.133,44,1.384,45,0.704,46,1.267,47,1.384,48,1.267,49,1.384,50,1.384,51,1.063,52,1.161,53,1.384,54,1.161,55,1.384,56,1.161,57,1.384,58,1.384,59,1.161,60,1.161,61,1.384,62,1.161,63,1.384,64,1.788,65,1.384,66,1.161,67,1.384,68,1.384,69,1.059,70,1.267,71,1.384,72,0.025,73,0.025,80,0.889,85,0.889,86,0.604,107,0.632,113,3.847,214,1.388,226,0.889,287,0.811,321,1.514,325,1.654,326,2.012,328,1.977,361,2.593,440,1.267,454,3.283,455,2.949,546,1.514,552,2.414,553,2.333,554,1.514,555,1.661,562,1.514,566,1.514,567,1.384,568,1.514,570,1.828,575,1.661,577,1.661,578,1.828,584,2.553,596,2.168,600,1.828,603,1.661,617,2.657,624,1.828,634,2.024,636,1.661,638,1.514,639,2.259,642,2.553,644,1.977,645,2.259,662,2.553,722,2.259,725,2.553,726,2.553,735,3.847,969,3.523,985,4.283,986,2.946,987,5.152,988,4.627,989,3.544,990,3.544,991,3.544,992,3.544,993,3.544,994,4.627,995,4.627,996,2.946,997,3.544,998,3.544,999,3.544,1000,3.544,1001,3.544,1002,3.544,1003,3.544,1004,3.544,1005,2.946]],["title/injectables/ToastService.html",[95,0.863,361,1.344]],["body/injectables/ToastService.html",[3,0.709,4,0.388,8,0.285,12,1.312,19,0.285,20,0.646,23,0.485,24,0.035,25,1.184,26,1.42,27,1.083,30,1.366,32,0.572,33,0.388,37,0.572,38,0.444,45,0.756,72,0.025,73,0.025,78,1.42,85,1.389,86,0.943,93,1.573,94,1.568,95,1.299,97,1.434,99,1.108,106,1.438,107,0.501,111,2.339,132,2.048,133,3.774,137,1.434,146,1.188,175,1.718,185,0.84,361,2.023,601,3.853,969,3.16,970,2.644,971,5.079,972,4.763,973,4.356,974,3.935,975,3.935,976,4.356,977,3.935,978,3.935,979,3.935,980,3.935,981,2.644,982,3.052,983,3.052,984,4.601,1006,4.734,1007,4.734,1008,4.734,1009,4.734,1010,3.671,1011,3.671,1012,3.671,1013,3.671,1014,3.671,1015,3.671,1016,3.671]],["title/components/UploadFileModal.html",[0,0.333,66,1.03]],["body/components/UploadFileModal.html",[0,0.41,1,1.584,2,1.049,3,0.255,4,0.223,5,0.823,6,0.823,7,0.823,8,0.439,10,0.754,11,1.871,13,1.049,15,1.251,19,0.301,20,0.437,23,0.417,24,0.035,25,0.605,26,0.961,27,0.733,30,1.275,32,0.592,33,0.223,35,0.69,37,0.255,38,0.255,39,0.823,40,1.251,41,1.251,42,0.823,43,1.689,44,0.823,45,0.716,46,0.754,47,0.823,48,0.754,49,0.823,50,0.823,51,0.632,52,0.69,53,0.823,54,0.69,55,0.823,56,0.69,57,0.823,58,0.823,59,0.69,60,0.69,61,0.823,62,0.69,63,0.823,64,0.69,65,0.823,66,1.417,67,2.049,68,0.823,69,0.733,70,0.754,71,0.823,72,0.017,73,0.017,78,0.961,80,0.529,83,1.988,85,1.085,86,0.737,93,1.345,96,1.087,99,0.605,107,0.437,114,1.518,122,1.297,132,1.751,144,1.204,146,0.804,154,1.063,158,1.817,175,1.162,192,1.251,204,1.751,214,1.67,215,0.988,216,0.901,218,1.087,226,0.529,232,1.087,251,0.988,287,1.23,321,0.901,325,1.145,326,1.251,327,2.307,328,1.368,360,1.829,361,2.175,373,2.797,392,1.501,394,1.753,396,1.518,400,2.175,440,0.754,441,1.204,445,1.343,456,1.518,458,1.753,471,1.753,472,1.204,496,1.652,497,1.204,498,1.518,511,2.663,534,1.753,536,1.518,537,1.753,538,1.343,539,1.753,546,1.655,549,2.47,550,2.295,552,2.567,553,2.241,554,0.901,555,2.386,556,1.343,557,2.4,559,2.295,562,2.093,563,1.204,564,1.518,566,1.655,567,1.513,568,1.848,569,1.652,570,1.087,571,2.79,572,2.757,575,2.751,576,2.656,577,2.518,578,1.087,579,2.656,580,2.47,582,1.204,583,1.087,584,1.518,586,2.307,588,2.027,593,1.368,594,1.652,596,2.646,597,1.829,600,1.087,603,2.18,607,1.753,608,1.518,612,2.041,614,2.041,615,1.518,616,3.244,618,2.307,624,1.652,625,2.041,628,2.041,633,2.995,636,1.815,638,1.848,639,1.343,641,1.204,643,2.47,644,1.368,646,1.518,651,2.041,654,1.204,656,1.829,657,1.829,662,2.307,713,1.753,722,2.041,731,1.753,732,1.753,737,1.518,743,1.518,809,3.596,879,1.753,880,1.753,907,2.79,908,3.351,996,1.753,1005,3.596,1017,1.753,1018,4.652,1019,3.873,1020,3.203,1021,3.873,1022,4.652,1023,3.203,1024,3.203,1025,3.203,1026,4.326,1027,3.203,1028,3.873,1029,4.326,1030,1.753,1031,3.203,1032,2.108,1033,2.108,1034,3.203,1035,4.899,1036,2.108,1037,3.203,1038,2.108,1039,3.203,1040,2.108,1041,2.108,1042,2.108,1043,2.108,1044,2.108,1045,2.108,1046,1.753,1047,2.108,1048,2.108,1049,2.108,1050,4.652,1051,2.108,1052,3.203,1053,3.203,1054,2.108,1055,2.108,1056,2.108,1057,3.203,1058,2.108,1059,2.108,1060,2.108,1061,2.108,1062,2.108,1063,2.108,1064,2.108,1065,2.108,1066,2.108,1067,2.108,1068,2.108,1069,2.108,1070,2.108,1071,3.203,1072,3.203,1073,4.652,1074,2.108,1075,2.108,1076,2.108,1077,2.108,1078,2.108,1079,2.108,1080,2.108,1081,2.108,1082,2.108,1083,4.326,1084,3.203,1085,2.108,1086,2.108,1087,2.108,1088,2.108,1089,2.108,1090,3.873,1091,3.203,1092,2.108,1093,2.108,1094,2.108,1095,3.203,1096,2.108,1097,2.108,1098,2.108,1099,2.108,1100,2.108,1101,2.108,1102,2.108,1103,2.108,1104,2.108,1105,3.203,1106,3.203,1107,2.108,1108,2.108,1109,2.108,1110,2.108,1111,2.108,1112,2.108,1113,3.203]],["title/interfaces/User.html",[142,1.124,185,0.72]],["body/interfaces/User.html",[3,0.286,4,0.25,8,0.411,12,0.846,19,0.184,20,0.477,23,0.45,24,0.035,25,1.207,27,0.799,32,0.591,33,0.25,37,0.502,38,0.286,45,0.667,69,0.542,72,0.019,73,0.019,80,0.594,86,0.872,95,0.959,97,0.924,99,0.966,105,1.631,106,0.959,107,0.477,122,0.71,127,2.147,129,2.26,130,3.042,137,0.924,138,1.801,139,1.351,140,1.801,141,1.351,142,2.2,146,1.327,154,1.258,158,1.621,162,1.351,173,2.791,175,1.753,184,1.945,185,0.95,186,1.221,187,1.109,188,1.351,189,1.351,190,1.508,191,2.225,192,2.121,194,1.508,195,2.645,196,1.351,197,1.508,198,3.304,199,1.109,200,1.351,201,1.351,202,1.492,203,2.225,204,1.638,205,3.725,206,2.364,207,2.617,208,2.617,209,2.147,210,2.617,211,2.791,212,2.498,213,2.921,214,0.71,215,1.109,216,1.773,217,1.351,218,1.801,219,1.994,220,2.225,221,1.994,222,1.994,223,1.508,224,1.351,225,1.508,226,0.594,227,2.225,228,1.508,229,1.508,230,1.508,231,1.508,232,1.221,233,2.225,234,1.508,235,1.508,236,1.508,237,1.508,238,1.508,239,1.508,240,1.508,241,2.225,242,2.225,243,1.508,244,2.225,245,1.508,246,1.508,247,1.508,248,2.225,249,1.508,250,1.508,251,2.397,252,1.351,253,1.508,254,3.46,255,1.508,256,1.508,257,1.508,258,1.508,259,1.508,260,1.994,261,3.644,262,1.508,263,2.225,264,2.225,265,2.225,266,1.508,267,2.645,268,2.225,269,1.508,270,1.508,271,1.508,272,2.225,273,1.508,274,1.508,275,1.508,276,1.508,277,1.508,278,3.259,279,1.508,280,1.508,281,2.225,282,1.508,283,1.508,284,1.508,285,1.508,286,1.508,287,0.542,288,1.508,289,2.225,290,1.351,291,1.508,292,1.508,293,2.225,294,1.508,295,2.225,296,1.508,297,1.994,298,1.508,299,1.508,300,1.508,301,1.508,302,1.351,303,1.508,304,1.508,305,1.508,306,1.508,307,1.508,308,2.225,309,1.508,310,1.508,311,1.508,312,2.225,313,1.508,314,2.225,315,1.508,316,1.508,317,1.508,318,1.508,319,1.508,320,1.221]],["title/components/Users.html",[0,0.333,69,0.72]],["body/components/Users.html",[0,0.372,1,1.535,2,0.932,3,0.219,4,0.191,5,0.707,6,0.707,7,0.707,8,0.221,10,0.647,11,1.808,13,0.932,15,1.111,19,0.141,20,0.389,23,0.447,24,0.035,25,0.869,26,1.695,27,1.294,30,1.377,32,0.647,33,0.191,35,1.306,36,1.303,37,0.219,38,0.524,39,0.707,40,1.111,41,1.111,42,0.707,43,1.694,44,0.707,45,0.717,46,1.426,47,1.798,48,1.878,49,0.707,50,0.707,51,1.196,52,0.592,53,0.707,54,0.592,55,0.707,56,1.152,57,0.707,58,0.707,59,0.592,60,1.306,61,0.707,62,0.592,63,0.707,64,1.306,65,0.707,66,0.592,67,0.707,68,0.707,69,1.28,70,0.647,71,0.707,72,0.015,73,0.015,78,0.854,80,0.454,85,1.001,86,0.68,93,1.37,98,1.216,99,0.753,105,0.781,106,0.966,107,0.545,122,1.196,129,1.967,132,1.784,142,1.915,144,1.033,154,1.264,158,1.798,175,1.301,193,1.814,202,2.327,206,2.057,209,1.869,211,1.625,212,1.704,213,1.625,214,1.196,226,1.252,251,0.848,287,0.414,320,0.933,321,0.773,323,2.009,325,1.017,326,1.374,327,2.534,328,1.216,331,2.242,332,2.242,333,2.242,337,2.242,340,2.924,346,2.924,347,3.316,351,2.277,352,2.366,354,2.366,355,2.366,360,1.625,361,2.058,371,2.366,373,2.629,376,1.814,377,2.542,379,2.366,388,1.815,389,3.258,391,2.476,392,2.158,393,3.316,396,3.594,397,2.366,399,1.815,400,1.374,404,2.366,406,1.814,410,2.75,412,2.763,417,1.625,421,2.873,422,2.366,423,3.316,424,2.05,425,2.366,440,0.647,441,1.033,442,1.504,443,1.033,444,1.033,445,1.153,447,1.153,452,1.303,453,1.504,454,1.153,455,1.153,456,1.303,460,1.504,472,1.625,474,2.366,475,1.504,477,2.366,483,2.924,484,1.504,496,1.468,497,1.033,498,1.303,499,1.504,504,1.504,505,1.504,506,1.153,508,2.366,529,1.504,530,1.504,531,1.504,535,1.504,536,1.303,543,1.153,544,1.303,545,1.303,546,1.704,547,1.153,548,1.153,549,1.033,550,0.848,551,1.153,552,2.158,553,1.704,554,0.773,555,1.648,556,1.153,557,1.468,558,1.303,559,1.869,560,1.625,562,1.704,566,1.503,567,1.374,568,1.503,569,0.933,570,1.468,572,1.153,575,1.869,576,1.625,577,1.334,578,0.933,579,1.033,580,1.625,582,1.033,583,0.933,588,0.848,594,0.933,596,2.158,597,1.625,600,1.468,603,0.848,609,1.504,611,2.242,612,1.153,614,1.814,615,1.303,616,2.542,617,0.933,618,1.303,624,0.933,625,1.153,628,1.153,633,1.033,634,1.033,635,1.303,636,1.334,637,1.153,638,0.773,641,1.033,643,1.625,644,0.773,645,1.153,646,1.303,647,1.504,648,1.504,649,1.303,650,1.504,651,1.153,652,1.504,653,1.303,802,1.504,812,1.504,822,1.504,827,1.504,981,1.303,1030,1.504,1046,1.504,1114,1.504,1115,3.518,1116,2.846,1117,3.518,1118,3.518,1119,3.518,1120,3.518,1121,3.518,1122,3.518,1123,3.518,1124,3.518,1125,3.988,1126,3.988,1127,3.988,1128,2.846,1129,1.81,1130,1.81,1131,1.81,1132,1.81,1133,1.81,1134,1.81,1135,1.81,1136,1.81,1137,2.846,1138,1.81,1139,2.846,1140,2.846,1141,1.81,1142,1.81,1143,1.81,1144,1.81,1145,1.81,1146,1.81,1147,1.81,1148,2.846,1149,1.81,1150,2.846,1151,2.846,1152,3.518,1153,2.846,1154,3.988,1155,2.366,1156,1.81,1157,1.81,1158,1.81,1159,1.81,1160,1.81,1161,2.846,1162,1.81,1163,1.81,1164,1.504,1165,3.518,1166,1.81,1167,1.81,1168,2.846,1169,2.846,1170,3.518,1171,1.81,1172,1.81,1173,1.81,1174,1.81,1175,1.81,1176,1.81,1177,1.81,1178,1.81,1179,1.81,1180,1.81,1181,1.81,1182,1.81,1183,1.81]],["title/coverage.html",[1184,3.553]],["body/coverage.html",[0,0.652,1,0.963,8,0.357,9,2.915,23,0.357,24,0.035,35,1.148,46,1.254,48,1.643,51,1.052,54,1.148,56,1.148,59,1.148,62,1.148,64,1.148,66,1.148,69,0.803,72,0.025,73,0.025,74,3.309,75,2.235,77,3.309,83,1.369,95,1.407,108,2.235,112,2.915,122,1.052,142,1.254,146,0.88,185,1.326,186,1.809,188,3.106,189,3.106,199,1.643,287,1.49,322,2.915,334,2.526,361,1.498,385,2.002,388,1.809,399,1.809,443,2.926,444,2.002,448,2.526,449,2.526,454,2.235,660,2.915,677,2.915,770,2.915,771,2.915,772,2.915,801,2.915,888,2.235,889,2.526,891,2.915,892,2.915,905,3.691,906,3.691,969,2.002,970,3.309,985,2.915,986,2.915,1017,2.915,1114,2.915,1164,2.915,1184,2.915,1185,3.507,1186,3.507,1187,3.507,1188,2.915,1189,6.057,1190,2.915,1191,6.308,1192,4.595,1193,3.507,1194,4.595,1195,3.507,1196,3.507,1197,5.439,1198,4.067,1199,4.067,1200,5.646,1201,2.915,1202,2.915,1203,2.915,1204,2.915,1205,4.595,1206,3.507,1207,3.86,1208,2.915,1209,2.915,1210,2.915,1211,2.915,1212,2.915,1213,3.507,1214,4.595,1215,3.507,1216,4.595,1217,3.507,1218,3.507,1219,3.507,1220,3.507,1221,3.507,1222,3.507]],["title/dependencies.html",[1223,2.192,1224,3.141]],["body/dependencies.html",[24,0.035,33,0.497,34,2.007,72,0.03,73,0.03,137,1.834,143,3.904,196,2.682,221,2.682,440,1.679,441,2.682,1224,3.904,1225,4.697,1226,5.509,1227,5.178,1228,4.697,1229,4.697,1230,4.697,1231,3.904,1232,4.697,1233,4.697,1234,4.697,1235,4.697,1236,4.697,1237,4.697,1238,4.697,1239,4.697,1240,4.697,1241,4.697,1242,4.697]],["title/miscellaneous/functions.html",[1243,1.36,1244,3.141]],["body/miscellaneous/functions.html",[19,0.345,23,0.471,24,0.034,25,1.174,45,0.827,72,0.029,73,0.029,85,1.519,86,1.032,93,1.662,122,1.598,130,2.289,192,1.733,199,2.496,360,2.534,385,3.259,387,4.429,448,3.837,449,3.837,1198,3.196,1199,4.111,1201,4.429,1207,2.828,1208,4.429,1243,2.289,1244,3.689,1245,4.111,1246,4.429,1247,4.437,1248,4.437,1249,4.437,1250,4.437,1251,4.437,1252,4.437,1253,4.437,1254,4.437,1255,4.437]],["title/index.html",[19,0.205,290,1.505,1256,2.636]],["body/index.html",[0,0.584,2,1.345,4,0.435,24,0.027,26,1.524,70,1.468,72,0.027,73,0.027,146,1.03,165,3.414,168,3.414,192,1.604,204,1.468,224,2.345,421,2.958,424,4.348,476,3.414,515,2.617,543,2.617,604,2.345,890,3.414,1155,3.414,1227,3.414,1231,3.414,1257,4.587,1258,4.107,1259,5.081,1260,5.766,1261,5.925,1262,3.414,1263,5.081,1264,5.518,1265,5.925,1266,6.037,1267,6.037,1268,4.107,1269,5.081,1270,4.107,1271,4.107,1272,4.107,1273,5.081,1274,4.107,1275,4.107,1276,4.107,1277,4.107,1278,5.081,1279,5.081,1280,4.107,1281,4.107,1282,4.107,1283,5.518,1284,4.107,1285,4.107,1286,4.107,1287,4.107,1288,4.107,1289,5.518,1290,4.107,1291,4.107,1292,4.107,1293,4.107,1294,4.107,1295,4.107,1296,4.107,1297,4.107,1298,4.107,1299,5.081,1300,5.518,1301,4.107,1302,4.107,1303,4.107,1304,4.107,1305,4.107,1306,5.518,1307,4.107,1308,4.107,1309,5.081,1310,4.107,1311,4.107,1312,4.107,1313,4.107,1314,4.107,1315,4.107,1316,4.107,1317,4.107,1318,4.107,1319,3.414,1320,4.107,1321,3.414,1322,4.107,1323,4.107,1324,4.107]],["title/modules.html",[1325,3.553]],["body/modules.html",[24,0.031,72,0.031,73,0.031,1325,4.21]],["title/overview.html",[204,1.528]],["body/overview.html",[2,1.63,24,0.031,72,0.031,73,0.031,76,3.586,111,3.173,187,2.333,204,1.78,226,1.249,888,3.173,901,4.14,903,4.14,948,3.173,1326,4.979]],["title/properties.html",[20,0.516,1223,2.192]],["body/properties.html",[20,0.688,24,0.032,72,0.031,73,0.031,1262,4.189,1327,5.038]],["title/miscellaneous/typealiases.html",[1243,1.36,1328,3.778]],["body/miscellaneous/typealiases.html",[19,0.385,23,0.385,24,0.033,72,0.031,73,0.031,385,3.245,857,3.568,1207,3.157,1243,2.556,1245,3.568,1329,4.955,1330,4.119,1331,4.119]],["title/miscellaneous/variables.html",[1243,1.36,1332,3.141]],["body/miscellaneous/variables.html",[8,0.206,19,0.206,23,0.467,24,0.035,26,1.711,27,1.306,28,1.515,29,1.691,45,0.727,72,0.02,73,0.02,107,0.362,127,1.778,129,1.621,142,1.729,154,1.042,184,2.076,193,1.691,204,1.729,206,1.958,207,2.167,208,2.167,209,1.778,210,2.167,214,1.45,215,2.266,218,2.494,226,0.952,260,2.167,334,2.733,385,1.515,391,1.515,392,1.243,455,1.691,561,1.911,567,1.036,593,1.134,595,1.911,659,2.206,701,1.911,857,3.191,948,2.418,1188,2.206,1190,3.155,1198,1.911,1199,3.483,1202,3.155,1203,3.155,1204,3.155,1207,1.691,1209,3.155,1210,3.155,1211,3.155,1212,3.155,1243,1.369,1245,3.685,1246,3.683,1257,3.155,1319,2.206,1321,2.206,1330,2.206,1331,3.683,1332,2.206,1333,2.653,1334,2.653,1335,2.653,1336,2.653,1337,2.653,1338,2.653,1339,2.653,1340,5.116,1341,4.836,1342,4.836,1343,3.795,1344,4.431,1345,3.795,1346,3.795,1347,3.795,1348,4.431,1349,3.795,1350,3.795,1351,3.795,1352,3.795,1353,4.431,1354,3.795,1355,3.795,1356,3.795,1357,4.431,1358,3.795,1359,3.795,1360,3.795,1361,3.795,1362,3.795,1363,3.795,1364,3.795,1365,3.795,1366,3.795,1367,3.795,1368,3.795,1369,3.795,1370,4.836,1371,3.795,1372,3.795,1373,3.795,1374,3.795,1375,3.795,1376,3.795,1377,3.795,1378,3.795,1379,3.795,1380,3.795,1381,3.795,1382,3.795,1383,4.431,1384,4.431,1385,4.431,1386,4.431,1387,3.795,1388,3.795,1389,3.795,1390,3.795,1391,2.653,1392,2.653,1393,3.795,1394,5.48,1395,2.653,1396,2.653,1397,5.48,1398,3.795,1399,2.653,1400,2.653,1401,2.653,1402,2.653,1403,4.431,1404,2.653,1405,2.653,1406,2.653,1407,2.653,1408,2.653,1409,2.653,1410,2.653,1411,5.322,1412,2.653,1413,2.653,1414,2.653,1415,2.653,1416,2.653,1417,2.653,1418,2.653,1419,2.653,1420,2.653,1421,2.653,1422,2.653,1423,2.653,1424,2.653,1425,3.795,1426,2.653,1427,2.653,1428,2.653,1429,2.653,1430,2.653,1431,3.795,1432,5.116,1433,2.653,1434,3.795,1435,2.653,1436,2.653,1437,2.653,1438,2.653,1439,2.653,1440,3.795,1441,2.653,1442,3.795,1443,2.653,1444,3.795,1445,5.322,1446,2.653,1447,3.795,1448,2.653,1449,4.431,1450,3.795,1451,4.431,1452,3.795,1453,2.653,1454,3.795,1455,2.653,1456,4.431,1457,3.795,1458,4.431,1459,3.795,1460,3.795,1461,2.653,1462,3.795,1463,4.431,1464,3.795,1465,3.795,1466,3.795,1467,3.795,1468,2.653,1469,3.795,1470,2.653,1471,4.431,1472,3.795,1473,3.795,1474,3.795,1475,3.795,1476,2.653,1477,3.795,1478,2.653,1479,2.653,1480,2.653,1481,2.653,1482,2.653,1483,2.653,1484,2.653,1485,2.653,1486,4.836,1487,2.653,1488,2.653,1489,2.653,1490,2.653,1491,2.653,1492,2.653,1493,2.653,1494,2.653,1495,2.653,1496,2.653,1497,2.653,1498,2.653,1499,2.653,1500,2.653,1501,2.653,1502,2.653,1503,2.653,1504,2.653,1505,2.653,1506,2.653,1507,2.653,1508,2.653,1509,2.653,1510,2.653,1511,2.653,1512,2.653,1513,2.653,1514,3.795,1515,2.653,1516,2.653,1517,2.653,1518,2.653,1519,2.653,1520,2.653,1521,2.653,1522,2.653,1523,2.653,1524,2.653,1525,2.653,1526,2.653,1527,2.653,1528,2.653]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":287,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1327,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.15.0",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":599,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["0.2s",{"_index":625,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["0.3s",{"_index":725,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{}}}],["0.5mb",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5px",{"_index":710,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.5rem",{"_index":573,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["0.75rem",{"_index":592,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["0.95rem",{"_index":1113,"title":{},"body":{"components/UploadFileModal.html":{}}}],["0.9em",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{}}}],["0/1",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{}}}],["007aff",{"_index":631,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["01",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":226,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.13.1",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["1.18rem",{"_index":1094,"title":{},"body":{"components/UploadFileModal.html":{}}}],["1.1rem",{"_index":713,"title":{},"body":{"components/HeaderComponent.html":{},"components/UploadFileModal.html":{}}}],["1.2rem",{"_index":1101,"title":{},"body":{"components/UploadFileModal.html":{}}}],["1.3rem",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1.5mb",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.5rem",{"_index":1098,"title":{},"body":{"components/UploadFileModal.html":{}}}],["10",{"_index":297,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/User.html":{}}}],["100",{"_index":588,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["1000",{"_index":996,"title":{},"body":{"components/ToastComponent.html":{},"components/UploadFileModal.html":{}}}],["1001",{"_index":1082,"title":{},"body":{"components/UploadFileModal.html":{}}}],["100vh",{"_index":551,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["1024",{"_index":1059,"title":{},"body":{"components/UploadFileModal.html":{}}}],["1024)).tofixed(2",{"_index":1060,"title":{},"body":{"components/UploadFileModal.html":{}}}],["10px",{"_index":638,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["11",{"_index":1326,"title":{},"body":{"overview.html":{}}}],["111",{"_index":648,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["1200px",{"_index":558,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/Users.html":{}}}],["120px",{"_index":1087,"title":{},"body":{"components/UploadFileModal.html":{}}}],["123",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1234567890",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":633,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["14px",{"_index":639,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{}}}],["15",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150px",{"_index":585,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{}}}],["1565c0",{"_index":1093,"title":{},"body":{"components/UploadFileModal.html":{}}}],["15px",{"_index":634,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/Users.html":{}}}],["160px",{"_index":1111,"title":{},"body":{"components/UploadFileModal.html":{}}}],["16px",{"_index":611,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/Users.html":{}}}],["180px",{"_index":640,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["18px",{"_index":1005,"title":{},"body":{"components/ToastComponent.html":{},"components/UploadFileModal.html":{}}}],["19.4.3",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["1976d2",{"_index":1090,"title":{},"body":{"components/UploadFileModal.html":{}}}],["1990",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1995",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1em",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["1mb",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":582,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["1rem",{"_index":571,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{}}}],["1s",{"_index":781,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["2",{"_index":948,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":1088,"title":{},"body":{"components/UploadFileModal.html":{}}}],["20",{"_index":401,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["20.0.0",{"_index":1227,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["20.0.1",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{}}}],["2025",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["20px",{"_index":617,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/Users.html":{}}}],["2196f3",{"_index":1004,"title":{},"body":{"components/ToastComponent.html":{}}}],["220px",{"_index":1086,"title":{},"body":{"components/UploadFileModal.html":{}}}],["222",{"_index":651,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["22px",{"_index":649,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/Users.html":{}}}],["24px",{"_index":612,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["250px",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["255",{"_index":742,"title":{},"body":{"components/HeaderComponent.html":{}}}],["25px",{"_index":642,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/ToastComponent.html":{}}}],["280px",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["2mb",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":632,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{}}}],["2rem",{"_index":556,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["2vw",{"_index":1106,"title":{},"body":{"components/UploadFileModal.html":{}}}],["3",{"_index":901,"title":{},"body":{"pipes/PhoneNumberPipe.html":{},"overview.html":{}}}],["30",{"_index":402,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["300",{"_index":1175,"title":{},"body":{"components/Users.html":{}}}],["3000",{"_index":983,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["300px",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["30px",{"_index":670,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["320px",{"_index":1183,"title":{},"body":{"components/Users.html":{}}}],["32px",{"_index":1079,"title":{},"body":{"components/UploadFileModal.html":{}}}],["32vw",{"_index":1085,"title":{},"body":{"components/UploadFileModal.html":{}}}],["333",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["3498db",{"_index":778,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["36px",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{}}}],["38vw",{"_index":1110,"title":{},"body":{"components/UploadFileModal.html":{}}}],["3gp",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":724,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":945,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["400px",{"_index":655,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["40px",{"_index":743,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["450px",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["456",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4caf50",{"_index":1000,"title":{},"body":{"components/ToastComponent.html":{}}}],["4px",{"_index":578,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["50",{"_index":643,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["500",{"_index":618,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["50px",{"_index":663,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{}}}],["5px",{"_index":776,"title":{},"body":{"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{}}}],["6",{"_index":903,"title":{},"body":{"pipes/PhoneNumberPipe.html":{},"overview.html":{}}}],["600",{"_index":598,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["600px",{"_index":666,"title":{},"body":{"components/FooterComponent.html":{}}}],["666",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["6px",{"_index":628,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["7.8.0",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{}}}],["700px",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["768px",{"_index":1104,"title":{},"body":{"components/UploadFileModal.html":{}}}],["8",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["8.0.3",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":718,"title":{},"body":{"components/HeaderComponent.html":{}}}],["800px",{"_index":1078,"title":{},"body":{"components/UploadFileModal.html":{}}}],["80px",{"_index":1112,"title":{},"body":{"components/UploadFileModal.html":{}}}],["888",{"_index":646,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["8px",{"_index":616,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["900px",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["90vw",{"_index":1077,"title":{},"body":{"components/UploadFileModal.html":{}}}],["9876543210",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98vw",{"_index":1105,"title":{},"body":{"components/UploadFileModal.html":{}}}],["99",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{}}}],["999",{"_index":665,"title":{},"body":{"components/FooterComponent.html":{}}}],["_actions",{"_index":928,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_columns",{"_index":922,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_currentpage",{"_index":926,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_data",{"_index":923,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_emptymessage",{"_index":930,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_loading",{"_index":929,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_pagesize",{"_index":927,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["_totalitems",{"_index":924,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["a94442",{"_index":720,"title":{},"body":{"components/HeaderComponent.html":{}}}],["absolute",{"_index":641,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["accent",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["accessors",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["action",{"_index":391,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["actionclick",{"_index":949,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["actions",{"_index":331,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["activatedroutesnapshot",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["active",{"_index":714,"title":{},"body":{"components/HeaderComponent.html":{}}}],["active::after",{"_index":716,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actual_component",{"_index":71,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["add",{"_index":47,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["addedituser",{"_index":46,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["addfile",{"_index":744,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["addfile(file",{"_index":274,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["adding",{"_index":265,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["additional",{"_index":1317,"title":{},"body":{"index.html":{}}}],["address",{"_index":209,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["adduser",{"_index":745,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["adduser(user",{"_index":259,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["adjust",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{}}}],["adjustments",{"_index":1103,"title":{},"body":{"components/UploadFileModal.html":{}}}],["admin",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["admin123",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin@fmanage.com",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["again",{"_index":539,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["ai",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{}}}],["alias",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1329,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":566,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["allowed",{"_index":608,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["angular",{"_index":1260,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":440,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":441,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":913,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["angular/material/icon",{"_index":915,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["angular/material/paginator",{"_index":447,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["angular/material/progress",{"_index":917,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["angular/material/table",{"_index":910,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["angular/platform",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":34,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"dependencies.html":{}}}],["animation",{"_index":779,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["app.html",{"_index":16,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1273,"title":{},"body":{"index.html":{}}}],["application/epub+zip",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/msword",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/mxf",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/postscript",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/rtf",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.amazon.ebook",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.ms",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.formula",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.graphics",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.presentation",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.spreadsheet",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.text",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformats",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.rn",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/x",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":479,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["applyfilters",{"_index":347,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["area",{"_index":1084,"title":{},"body":{"components/UploadFileModal.html":{}}}],["area:hover",{"_index":1092,"title":{},"body":{"components/UploadFileModal.html":{}}}],["artifacts",{"_index":1292,"title":{},"body":{"index.html":{}}}],["arw",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asf",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/capture.png",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/file",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/logos/dark",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/notification.pdf",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":230,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["authguard",{"_index":75,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["author",{"_index":302,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["authorname",{"_index":403,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["authservice",{"_index":83,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/UploadFileModal.html":{},"coverage.html":{}}}],["auto",{"_index":560,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/Users.html":{}}}],["autoincrement",{"_index":242,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["automatically",{"_index":1274,"title":{},"body":{"index.html":{}}}],["available",{"_index":515,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"index.html":{}}}],["ave",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avi",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":234,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["azw3",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b3c6e6",{"_index":1102,"title":{},"body":{"components/UploadFileModal.html":{}}}],["b94a48",{"_index":719,"title":{},"body":{"components/HeaderComponent.html":{}}}],["backdrop",{"_index":1074,"title":{},"body":{"components/UploadFileModal.html":{}}}],["background",{"_index":552,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["behaviorsubject",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["behaviorsubject(null",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["between",{"_index":565,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{}}}],["bfc9db",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bg",{"_index":595,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["bi",{"_index":393,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["blob",{"_index":217,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["blob([file.data",{"_index":518,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["block",{"_index":547,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["bmp",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bold",{"_index":653,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["bootstrap",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":575,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["bottom",{"_index":569,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["box",{"_index":731,"title":{},"body":{"components/HeaderComponent.html":{},"components/UploadFileModal.html":{}}}],["brand",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{}}}],["break",{"_index":511,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["browse",{"_index":1071,"title":{},"body":{"components/UploadFileModal.html":{}}}],["browser",{"_index":1231,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["btn",{"_index":572,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["btn:disabled",{"_index":607,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["btn:hover",{"_index":650,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["build",{"_index":1289,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1290,"title":{},"body":{"index.html":{}}}],["button",{"_index":605,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{}}}],["button.active",{"_index":630,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["button:first",{"_index":626,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["button:last",{"_index":629,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["button[type=\"submit",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["button[type=\"submit\"]:disabled",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{}}}],["button[type=\"submit\"]:hover",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactivate",{"_index":79,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["canactivate(route",{"_index":87,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["canon",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":509,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["catch",{"_index":250,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["catcherror",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["catcherror(error",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["category",{"_index":387,"title":{},"body":{"components/FilesCompoenent.html":{},"miscellaneous/functions.html":{}}}],["center",{"_index":568,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["characters",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":627,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["choose",{"_index":1313,"title":{},"body":{"index.html":{}}}],["class",{"_index":38,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["cleartimeout(this.searchdebouncetimeout",{"_index":1173,"title":{},"body":{"components/Users.html":{}}}],["cli",{"_index":1261,"title":{},"body":{"index.html":{}}}],["close",{"_index":1022,"title":{},"body":{"components/UploadFileModal.html":{}}}],["closed",{"_index":1028,"title":{},"body":{"components/UploadFileModal.html":{}}}],["closemenu",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cloud",{"_index":394,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["code",{"_index":1278,"title":{},"body":{"index.html":{}}}],["col.key",{"_index":935,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["collapse",{"_index":589,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["color",{"_index":553,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["column",{"_index":657,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["columns",{"_index":332,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["come",{"_index":1311,"title":{},"body":{"index.html":{}}}],["command",{"_index":1306,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":326,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["commonmodule,formsmodule",{"_index":1045,"title":{},"body":{"components/UploadFileModal.html":{}}}],["commons/components/custom",{"_index":442,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["commons/components/footer/footer",{"_index":452,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["commons/components/header/header",{"_index":36,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["commons/components/toast",{"_index":453,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["commons/initializers/db",{"_index":200,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"interfaces/User.html":{}}}],["commons/services/toast.service",{"_index":456,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["commons/utils/file.utils",{"_index":450,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["compile",{"_index":1291,"title":{},"body":{"index.html":{}}}],["complete",{"_index":476,"title":{},"body":{"components/FilesCompoenent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":44,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"index.html":{},"overview.html":{}}}],["components/upload/upload",{"_index":446,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["computed",{"_index":412,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["confirm('are",{"_index":529,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["console.error('database",{"_index":795,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["console.error('error",{"_index":251,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["console.error('login",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["console.error('no",{"_index":514,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["console.log('database",{"_index":279,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["console.log('getting",{"_index":277,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["console.log('looking",{"_index":292,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["console.log('no",{"_index":288,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["console.log('retrieved",{"_index":272,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["console.log(email",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.authservice.isauthenticated",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["console.log(user",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["constructor(authservice",{"_index":359,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{}}}],["constructor(dbservice",{"_index":1030,"title":{},"body":{"components/UploadFileModal.html":{},"components/Users.html":{}}}],["constructor(formbuilder",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":1046,"title":{},"body":{"components/UploadFileModal.html":{},"components/Users.html":{}}}],["constructor(public",{"_index":993,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(router",{"_index":81,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoadingScreenComponent.html":{},"guards/LoginGuard.html":{}}}],["constructor(toastservice",{"_index":989,"title":{},"body":{"components/ToastComponent.html":{}}}],["contact",{"_index":210,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{}}}],["container",{"_index":548,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["containing",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content",{"_index":554,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["control",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["control.value",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["copy",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["copyright",{"_index":664,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["cover",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":1184,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr2",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":404,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["created_at",{"_index":211,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["created_on",{"_index":219,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["csv",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["currentpage",{"_index":333,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["currentuser",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["currentuser.role",{"_index":461,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["currentuser?.id",{"_index":1065,"title":{},"body":{"components/UploadFileModal.html":{}}}],["currentusersubject",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuservalue",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentyear",{"_index":671,"title":{},"body":{"components/FooterComponent.html":{}}}],["cursor",{"_index":579,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["custom",{"_index":52,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["customclass",{"_index":919,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["customtablecomponent",{"_index":51,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["danger",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["dashboard",{"_index":324,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["dashboard'},{'name",{"_index":55,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["dashed",{"_index":1089,"title":{},"body":{"components/UploadFileModal.html":{}}}],["data",{"_index":216,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{}}}],["database",{"_index":788,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["date",{"_index":212,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["date().getfullyear",{"_index":674,"title":{},"body":{"components/FooterComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":436,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["date(file.created_on",{"_index":491,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["date(this.searchdate",{"_index":488,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["date_of_birth",{"_index":207,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":221,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["db.createobjectstore('files",{"_index":247,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["db.createobjectstore('users",{"_index":240,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["db.objectstorenames.contains('files",{"_index":245,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["db.objectstorenames.contains('users",{"_index":238,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["db.service",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["db.service.ts",{"_index":189,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["db.service.ts:109",{"_index":762,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:117",{"_index":759,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:123",{"_index":753,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:138",{"_index":761,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:159",{"_index":760,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:177",{"_index":758,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:183",{"_index":755,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:189",{"_index":763,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:196",{"_index":765,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:213",{"_index":756,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:51",{"_index":766,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:52",{"_index":767,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:53",{"_index":769,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:54",{"_index":752,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:60",{"_index":764,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:84",{"_index":757,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db.service.ts:94",{"_index":754,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["db_name",{"_index":223,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["db_version",{"_index":225,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["dbschema",{"_index":191,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["dbservice",{"_index":360,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"miscellaneous/functions.html":{}}}],["decoration",{"_index":712,"title":{},"body":{"components/HeaderComponent.html":{}}}],["default",{"_index":26,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":197,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["delete",{"_index":396,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["deleted",{"_index":535,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["deletefile",{"_index":348,"title":{},"body":{"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{}}}],["deletefile(file",{"_index":364,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["deletefile(fileid",{"_index":304,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["deleteuser",{"_index":746,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["deleteuser(id",{"_index":318,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["deleting",{"_index":320,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["demonstration",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":1224,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["detailed",{"_index":1321,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":1263,"title":{},"body":{"index.html":{}}}],["digits",{"_index":897,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["digits.length",{"_index":899,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["digits.slice(0",{"_index":900,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["digits.slice(3",{"_index":902,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["digits.slice(6",{"_index":904,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["direction",{"_index":656,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["directive",{"_index":42,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["directives",{"_index":70,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"index.html":{}}}],["directory",{"_index":1294,"title":{},"body":{"index.html":{}}}],["discussion",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["display",{"_index":546,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["displayedcolumns",{"_index":933,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["dist",{"_index":1293,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1331,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["doc_extensions",{"_index":1209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(link",{"_index":525,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["document.body.removechild(link",{"_index":527,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["document.createelement('a",{"_index":521,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["documentation",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docx",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["dot",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotx",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":390,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["downloadfile",{"_index":349,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["downloadfile(file",{"_index":366,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["dragevent",{"_index":1035,"title":{},"body":{"components/UploadFileModal.html":{}}}],["drop",{"_index":1083,"title":{},"body":{"components/UploadFileModal.html":{}}}],["during",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["e0e0e0",{"_index":615,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["e2e",{"_index":1308,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1310,"title":{},"body":{"index.html":{}}}],["eaf2ff",{"_index":1096,"title":{},"body":{"components/UploadFileModal.html":{}}}],["ease",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{}}}],["ebook",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":48,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["edited",{"_index":1140,"title":{},"body":{"components/Users.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["ellipsis",{"_index":1099,"title":{},"body":{"components/UploadFileModal.html":{}}}],["email",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["emaildomainvalidator",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailregex",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailregex.test(email",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["emptymessage",{"_index":952,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["end",{"_index":424,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{},"index.html":{}}}],["end).map(user",{"_index":1151,"title":{},"body":{"components/Users.html":{}}}],["ensuredb",{"_index":255,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["enter",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["eps",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["epub",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":794,"title":{},"body":{"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["error('database",{"_index":257,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["error('user",{"_index":313,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["event",{"_index":373,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["event.action",{"_index":508,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["event.datatransfer",{"_index":1054,"title":{},"body":{"components/UploadFileModal.html":{}}}],["event.datatransfer.files.length",{"_index":1055,"title":{},"body":{"components/UploadFileModal.html":{}}}],["event.datatransfer.files[0",{"_index":1056,"title":{},"body":{"components/UploadFileModal.html":{}}}],["event.item.id",{"_index":1169,"title":{},"body":{"components/Users.html":{}}}],["event.preventdefault",{"_index":1052,"title":{},"body":{"components/UploadFileModal.html":{}}}],["event.stoppropagation",{"_index":1053,"title":{},"body":{"components/UploadFileModal.html":{}}}],["event.target",{"_index":497,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["eventcoalescing",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":908,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{}}}],["events",{"_index":647,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["example",{"_index":1266,"title":{},"body":{"index.html":{}}}],["excel",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excel.sheet.binary.macroenabled.12",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excel.sheet.macroenabled.12",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1301,"title":{},"body":{"index.html":{}}}],["existing",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser",{"_index":312,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["export",{"_index":37,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["extends",{"_index":190,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["extension",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eye",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["f",{"_index":28,"title":{},"body":{"components/App.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["f3f3f3",{"_index":777,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["f44336",{"_index":1002,"title":{},"body":{"components/ToastComponent.html":{}}}],["f5f5f5",{"_index":774,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["f8fbff",{"_index":1091,"title":{},"body":{"components/UploadFileModal.html":{}}}],["failed",{"_index":797,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["false",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["family",{"_index":619,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["fb2",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["female",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":614,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["fictionbook+xml",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{"interfaces/File.html":{}},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.created_on",{"_index":489,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["file.data",{"_index":513,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["file.id",{"_index":532,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["file.name",{"_index":524,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["file.name.tolowercase().includes(this.searchterm().tolowercase",{"_index":486,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["file.type",{"_index":414,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["file.user_id",{"_index":284,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["file_categories",{"_index":334,"title":{},"body":{"components/FilesCompoenent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file_paths",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["file_paths.docx",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file_paths.jpg",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file_paths.pdf",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file_paths.txt",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filecategory",{"_index":385,"title":{},"body":{"components/FilesCompoenent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filedate",{"_index":490,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filedate.todatestring",{"_index":492,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["fileid",{"_index":306,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["files",{"_index":192,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["files$.pipe",{"_index":464,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["files.filter(file",{"_index":283,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["files.html",{"_index":330,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["files.length",{"_index":286,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["files.map(file",{"_index":467,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["files.scss",{"_index":329,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filescompoenent",{"_index":54,"title":{"components/FilesCompoenent.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["filestore",{"_index":246,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["filestore.createindex('by",{"_index":248,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["fileswithauthors",{"_index":466,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filetype",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filetypes",{"_index":335,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["fill",{"_index":395,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filter",{"_index":480,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filtered",{"_index":425,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["filtered.filter(file",{"_index":485,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filtered.filter(user",{"_index":1179,"title":{},"body":{"components/Users.html":{}}}],["filtered.slice(start",{"_index":427,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filteredfiles",{"_index":336,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filteredusers",{"_index":1117,"title":{},"body":{"components/Users.html":{}}}],["filterfilesbycategory",{"_index":448,"title":{},"body":{"components/FilesCompoenent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterfilesbycategory(files",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filterfilesbycategory(filtered",{"_index":481,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["filters",{"_index":581,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["fit",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["fixed",{"_index":662,"title":{},"body":{"components/FooterComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{}}}],["flash",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":562,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["flv",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fmanage",{"_index":224,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"index.html":{}}}],["fmanagedb",{"_index":186,"title":{"interfaces/FManageDB.html":{}},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["following",{"_index":1305,"title":{},"body":{"index.html":{}}}],["font",{"_index":596,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["footer",{"_index":661,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":57,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["footercomponent",{"_index":56,"title":{"components/FooterComponent.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["forkjoin",{"_index":451,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["forkjoin(fileswithauthors",{"_index":470,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["form",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{}}}],["formarray",{"_index":1163,"title":{},"body":{"components/Users.html":{}}}],["formats",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"components/Users.html":{}}}],["formgroup",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{},"components/Users.html":{}}}],["formsmodule",{"_index":327,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["found",{"_index":289,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["framework",{"_index":1312,"title":{},"body":{"index.html":{}}}],["from(promise.resolve(false",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.db!.add('files",{"_index":275,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.add('users",{"_index":262,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.delete('files",{"_index":305,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.delete('users",{"_index":319,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.get('users",{"_index":308,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.getall('files",{"_index":281,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.getall('users",{"_index":267,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.db!.put('users",{"_index":315,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["from(this.initdb",{"_index":229,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["function",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1244,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":570,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["gender",{"_index":208,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1283,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1258,"title":{},"body":{"index.html":{}}}],["getallfiles",{"_index":303,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["getallusers",{"_index":273,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["getauthorname",{"_index":747,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["getauthorname(userid",{"_index":291,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["getcurrentuservalue",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["getf",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["getfilecategory",{"_index":1208,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfilecategory(filetype",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getfilesbyuser",{"_index":748,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["getfilesbyuser(userid",{"_index":276,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["getmimetype",{"_index":449,"title":{},"body":{"components/FilesCompoenent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmimetype(extension",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmimetype(file.type",{"_index":517,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["getting",{"_index":290,"title":{"index.html":{}},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["getuserbyemail",{"_index":749,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["getuserbyemail(email",{"_index":266,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["getuserbyid",{"_index":750,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["getuserbyid(id",{"_index":307,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["gif",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gotopage(page",{"_index":956,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["group",{"_index":635,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["guard",{"_index":74,"title":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":76,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{},"overview.html":{}}}],["h2",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["hamburger",{"_index":721,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header",{"_index":561,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":58,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["header.html",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.scss",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":35,"title":{"components/HeaderComponent.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["heic",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heif",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":550,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["helpbuilding",{"_index":1288,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":737,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["hidepassword",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetoast",{"_index":984,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["host",{"_index":545,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["hover",{"_index":715,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["hover::after",{"_index":717,"title":{},"body":{"components/HeaderComponent.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["htmlinputelement",{"_index":498,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["htmlselectelement",{"_index":501,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["htmlselectelement).value",{"_index":963,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["http://localhost:4200",{"_index":1272,"title":{},"body":{"index.html":{}}}],["ico",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":392,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":205,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["id.tostring",{"_index":264,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["idb",{"_index":196,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["idbpdatabase",{"_index":195,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["image/bmp",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/gif",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/heic",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/heif",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/jpeg",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/png",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/tiff",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/vnd.adobe.photoshop",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/webp",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/x",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_extensions",{"_index":1210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":669,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["implements",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"components/Users.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["important",{"_index":659,"title":{},"body":{"components/FilesCompoenent.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":13,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["includes",{"_index":1280,"title":{},"body":{"index.html":{}}}],["including",{"_index":1320,"title":{},"body":{"index.html":{}}}],["ind",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indd",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indesign",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":253,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["indexeddbservice",{"_index":122,"title":{"injectables/IndexedDBService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["indexes",{"_index":203,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["infinite",{"_index":783,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["information",{"_index":1319,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["initdb",{"_index":231,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["initial",{"_index":201,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"interfaces/User.html":{}}}],["initial.ts",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initialfilemetadata",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":796,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["initialize",{"_index":799,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["initialized",{"_index":258,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["initializedatabase",{"_index":199,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializedatabase(dbservice",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializedatabase(this",{"_index":249,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["initializedatabase(this.dbservice).subscribe",{"_index":793,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["initializing",{"_index":252,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"interfaces/User.html":{}}}],["initialusers",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":676,"title":{},"body":{"components/FooterComponent.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AuthService.html":{},"injectables/IndexedDBService.html":{},"injectables/ToastService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"guards/LoginGuard.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IndexedDBService.html":{},"injectables/ToastService.html":{},"overview.html":{}}}],["input",{"_index":496,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["input.files",{"_index":1048,"title":{},"body":{"components/UploadFileModal.html":{}}}],["input.files.length",{"_index":1049,"title":{},"body":{"components/UploadFileModal.html":{}}}],["input.files[0",{"_index":1051,"title":{},"body":{"components/UploadFileModal.html":{}}}],["input.is",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["inset",{"_index":1075,"title":{},"body":{"components/UploadFileModal.html":{}}}],["inter",{"_index":620,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["interface",{"_index":185,"title":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"interfaces/User.html":{}},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":187,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invalid",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["invalidemaildomain",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["isadmin",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["isauthenticated",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismenuopen",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isnan(numericid",{"_index":298,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["isvalid",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":506,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["items",{"_index":567,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["jpeg",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpg",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(user",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":563,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["karma",{"_index":1302,"title":{},"body":{"index.html":{}}}],["key",{"_index":202,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["keyframes",{"_index":785,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["keypath",{"_index":241,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["label",{"_index":389,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["last",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latest",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":594,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["left:0",{"_index":1109,"title":{},"body":{"components/UploadFileModal.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["length",{"_index":959,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["letter",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{}}}],["linear",{"_index":782,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["link",{"_index":520,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{}}}],["link.click",{"_index":526,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["link.download",{"_index":523,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["link.href",{"_index":522,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["links",{"_index":667,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["list",{"_index":1285,"title":{},"body":{"index.html":{}}}],["literal",{"_index":193,"title":{},"body":{"interfaces/FManageDB.html":{},"components/FilesCompoenent.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["loadfiles",{"_index":350,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["loading",{"_index":60,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["loadingscreencomponent",{"_index":59,"title":{"components/LoadingScreenComponent.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["loadusers",{"_index":1125,"title":{},"body":{"components/Users.html":{}}}],["local",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["localstorage",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('currentuser",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('currentuser",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["location",{"_index":1139,"title":{},"body":{"components/Users.html":{}}}],["login",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":63,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["login(email",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.html",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.scss",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":62,"title":{"components/LoginComponent.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["loginform",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginguard",{"_index":108,"title":{"guards/LoginGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["logo",{"_index":668,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["logo.png",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{}}}],["m2ts",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m4v",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{}}}],["make",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{}}}],["male",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage",{"_index":29,"title":{},"body":{"components/App.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["manager.docx",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["map(authorname",{"_index":469,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["map(files",{"_index":282,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["map(id",{"_index":263,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["map(user",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["map(users",{"_index":268,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["margin",{"_index":559,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["matbuttonmodule",{"_index":912,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["matching",{"_index":73,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this._totalitems",{"_index":938,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["math.max(2",{"_index":947,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["maticonmodule",{"_index":914,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["matpaginatormodule",{"_index":911,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["matprogressspinnermodule",{"_index":916,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["matroska",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":909,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["max",{"_index":557,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["mb",{"_index":1061,"title":{},"body":{"components/UploadFileModal.html":{}}}],["md",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":654,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["meeting",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":971,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"pipes/PhoneNumberPipe.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["methods",{"_index":78,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["mime_types",{"_index":1211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mimetype",{"_index":516,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["min",{"_index":549,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["miscellaneous",{"_index":1243,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mkv",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobi",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{}}}],["mobipocket",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":1018,"title":{},"body":{"components/UploadFileModal.html":{}}}],["modal'},{'name",{"_index":68,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["modify",{"_index":1277,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1325,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1155,"title":{},"body":{"components/Users.html":{},"index.html":{}}}],["mov",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp4",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpeg",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpg",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msvideo",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mts",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mxf",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namefor",{"_index":1284,"title":{},"body":{"index.html":{}}}],["nav",{"_index":711,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1271,"title":{},"body":{"index.html":{}}}],["navigatetohome",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{}}}],["needs",{"_index":1316,"title":{},"body":{"index.html":{}}}],["nef",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"injectables/IndexedDBService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":1118,"title":{},"body":{"components/Users.html":{}}}],["newcontact",{"_index":1119,"title":{},"body":{"components/Users.html":{}}}],["newemail",{"_index":1120,"title":{},"body":{"components/Users.html":{}}}],["newsize",{"_index":962,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["next",{"_index":472,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["ng",{"_index":1267,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":351,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["ngx",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["nikon",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":576,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["notes",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notification",{"_index":455,"title":{},"body":{"components/FilesCompoenent.html":{},"components/ToastComponent.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["notification.html",{"_index":988,"title":{},"body":{"components/ToastComponent.html":{}}}],["notification.scss",{"_index":987,"title":{},"body":{"components/ToastComponent.html":{}}}],["notification.ts",{"_index":986,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["notification.ts:12",{"_index":990,"title":{},"body":{"components/ToastComponent.html":{}}}],["notification.ts:13",{"_index":991,"title":{},"body":{"components/ToastComponent.html":{}}}],["notification/toast",{"_index":454,"title":{},"body":{"components/FilesCompoenent.html":{},"components/ToastComponent.html":{},"components/Users.html":{},"coverage.html":{}}}],["nowrap",{"_index":1100,"title":{},"body":{"components/UploadFileModal.html":{}}}],["null",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["number",{"_index":768,"title":{},"body":{"injectables/IndexedDBService.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["number.pipe.ts",{"_index":892,"title":{},"body":{"pipes/PhoneNumberPipe.html":{},"coverage.html":{}}}],["number.pipe.ts:8",{"_index":895,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["numericid",{"_index":295,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["object",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["occurred",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["odf",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odg",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odp",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ods",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odt",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.presentationml.presentation",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.presentationml.slideshow",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.presentationml.template",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.spreadsheetml.template",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.wordprocessingml.document",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.wordprocessingml.template",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ogv",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":260,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["onactionclick",{"_index":352,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["onactionclick(action",{"_index":966,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["onactionclick(event",{"_index":371,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["onadduser",{"_index":1126,"title":{},"body":{"components/Users.html":{}}}],["ondatechange",{"_index":353,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["ondatechange(event",{"_index":374,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["ondragover",{"_index":1023,"title":{},"body":{"components/UploadFileModal.html":{}}}],["ondragover(event",{"_index":1034,"title":{},"body":{"components/UploadFileModal.html":{}}}],["ondrop",{"_index":1024,"title":{},"body":{"components/UploadFileModal.html":{}}}],["ondrop(event",{"_index":1037,"title":{},"body":{"components/UploadFileModal.html":{}}}],["one",{"_index":1314,"title":{},"body":{"index.html":{}}}],["onfileselected",{"_index":1025,"title":{},"body":{"components/UploadFileModal.html":{}}}],["onfileselected(event",{"_index":1039,"title":{},"body":{"components/UploadFileModal.html":{}}}],["oninit",{"_index":323,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["onpagechange",{"_index":354,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["onpagechange(event",{"_index":376,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["onpagesizechange(event",{"_index":961,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["onsearchchange",{"_index":355,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["onsearchchange(event",{"_index":379,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["onsubmit",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["ontypechange",{"_index":356,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["ontypechange(event",{"_index":381,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["onuploadfile",{"_index":357,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["onusersaved",{"_index":1127,"title":{},"body":{"components/Users.html":{}}}],["opacity",{"_index":735,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToastComponent.html":{}}}],["open",{"_index":1270,"title":{},"body":{"index.html":{}}}],["opendb",{"_index":194,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["opendb(this.db_name",{"_index":235,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["opendocument",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1296,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/functions.html":{}}}],["outline",{"_index":623,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["output",{"_index":907,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{}}}],["outputs",{"_index":1027,"title":{},"body":{"components/UploadFileModal.html":{}}}],["overflow",{"_index":586,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["overlay",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["overview",{"_index":204,"title":{"overview.html":{}},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1223,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":555,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["page",{"_index":604,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"index.html":{}}}],["pageevent",{"_index":377,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["pageindex",{"_index":958,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["pages",{"_index":941,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["pages.push",{"_index":946,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["pagesize",{"_index":337,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["paginatedfiles",{"_index":338,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["paginatedusers",{"_index":1121,"title":{},"body":{"components/Users.html":{}}}],["pagination",{"_index":602,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["paginationpages",{"_index":940,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"miscellaneous/functions.html":{}}}],["parseint(u.id",{"_index":299,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["parseint(userid",{"_index":296,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["partial",{"_index":310,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["password",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pdf",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":1137,"title":{},"body":{"components/Users.html":{}}}],["performance",{"_index":1297,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":893,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["phonenumberpipe",{"_index":889,"title":{"pipes/PhoneNumberPipe.html":{}},"body":{"pipes/PhoneNumberPipe.html":{},"coverage.html":{}}}],["pipe",{"_index":888,"title":{"pipes/PhoneNumberPipe.html":{}},"body":{"pipes/PhoneNumberPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":890,"title":{},"body":{"pipes/PhoneNumberPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":896,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["please",{"_index":538,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["plus",{"_index":652,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["png",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pointer",{"_index":580,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["position",{"_index":636,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["pot",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["potx",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["powerful",{"_index":1281,"title":{},"body":{"index.html":{}}}],["powerpoint",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pps",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ppsx",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ppt",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pptx",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preview",{"_index":1095,"title":{},"body":{"components/UploadFileModal.html":{}}}],["primary",{"_index":606,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{}}}],["private",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["product",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1295,"title":{},"body":{"index.html":{}}}],["project",{"_index":1257,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/App.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"properties.html":{}}}],["protected",{"_index":21,"title":{},"body":{"components/App.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1067,"title":{},"body":{"components/UploadFileModal.html":{}}}],["providedin",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"guards/LoginGuard.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{}}}],["providerouter(routes",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["psd",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"components/ToastComponent.html":{}}}],["querying",{"_index":280,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["queryparams",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["radius",{"_index":577,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["raw",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodule",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{},"components/Users.html":{}}}],["readfilefromassets",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readfilefromassets(path",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":222,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["ready",{"_index":227,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["realmedia",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red",{"_index":784,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["reference",{"_index":1324,"title":{},"body":{"index.html":{}}}],["references",{"_index":1322,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":800,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["regular",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relative",{"_index":637,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["reload",{"_index":1275,"title":{},"body":{"index.html":{}}}],["remove",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["removefile",{"_index":1026,"title":{},"body":{"components/UploadFileModal.html":{}}}],["report",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["requirements",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserved",{"_index":673,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["resources",{"_index":1318,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{},"components/UploadFileModal.html":{}}}],["results",{"_index":72,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["returns",{"_index":93,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["reverse",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgba(0",{"_index":733,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rgba(0,0,0,0.12",{"_index":1080,"title":{},"body":{"components/UploadFileModal.html":{}}}],["rgba(0,0,0,0.18",{"_index":1076,"title":{},"body":{"components/UploadFileModal.html":{}}}],["rgba(255",{"_index":741,"title":{},"body":{"components/HeaderComponent.html":{}}}],["right",{"_index":600,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["rights",{"_index":672,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["rm",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmvb",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":206,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["room",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"guards/LoginGuard.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["rotate(0deg",{"_index":786,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["rotate(360deg",{"_index":787,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["route",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["router",{"_index":82,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{}}}],["routermodule",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeroutlet",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["routerstatesnapshot",{"_index":90,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["rtf",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1265,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1304,"title":{},"body":{"index.html":{}}}],["running",{"_index":1269,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["s@]+@[^\\s@]+\\.[^\\s",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["sample",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sans",{"_index":621,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["scaffolding",{"_index":1279,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1286,"title":{},"body":{"index.html":{}}}],["screen",{"_index":773,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen'},{'name",{"_index":61,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["screen.component.ts",{"_index":772,"title":{},"body":{"components/LoadingScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:50",{"_index":789,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:57",{"_index":791,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:61",{"_index":790,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen/loading",{"_index":771,"title":{},"body":{"components/LoadingScreenComponent.html":{},"coverage.html":{}}}],["search",{"_index":483,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["searchdate",{"_index":339,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["searchdate.todatestring",{"_index":493,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["searchdebouncetimeout",{"_index":1122,"title":{},"body":{"components/Users.html":{}}}],["searchterm",{"_index":340,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["secondary",{"_index":574,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{}}}],["section",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["select",{"_index":500,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["selectedcategory",{"_index":341,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["selectedfile",{"_index":1021,"title":{},"body":{"components/UploadFileModal.html":{}}}],["selectedfile.name",{"_index":1072,"title":{},"body":{"components/UploadFileModal.html":{}}}],["selectedtab",{"_index":342,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["selectedtype",{"_index":343,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["selecteduserid",{"_index":1123,"title":{},"body":{"components/Users.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["selecttab",{"_index":358,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["selecttab(category",{"_index":384,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["serif",{"_index":622,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["serveonce",{"_index":1268,"title":{},"body":{"index.html":{}}}],["server",{"_index":1264,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/UploadFileModal.html":{}}}],["services/indexed",{"_index":445,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoadingScreenComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["services/toast.service",{"_index":992,"title":{},"body":{"components/ToastComponent.html":{}}}],["session",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["set(this.files().map(file",{"_index":413,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["settimeout",{"_index":981,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{},"components/Users.html":{}}}],["shadow",{"_index":732,"title":{},"body":{"components/HeaderComponent.html":{},"components/UploadFileModal.html":{}}}],["shockwave",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":972,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showerror",{"_index":1006,"title":{},"body":{"injectables/ToastService.html":{}}}],["showerror(message",{"_index":977,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showinfo",{"_index":1007,"title":{},"body":{"injectables/ToastService.html":{}}}],["showinfo(message",{"_index":978,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showing",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showsuccess",{"_index":1008,"title":{},"body":{"injectables/ToastService.html":{}}}],["showsuccess(message",{"_index":975,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showtoast",{"_index":1009,"title":{},"body":{"injectables/ToastService.html":{}}}],["showtoast(message",{"_index":979,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showuploadmodal",{"_index":344,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["showusermodal",{"_index":1124,"title":{},"body":{"components/Users.html":{}}}],["sign",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["signal",{"_index":410,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["signal('all",{"_index":431,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["signal('no",{"_index":931,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["signal(0",{"_index":925,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["signal(1",{"_index":406,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["signal(10",{"_index":1148,"title":{},"body":{"components/Users.html":{}}}],["signal(5",{"_index":419,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["signal(false",{"_index":417,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{}}}],["signals",{"_index":457,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["size",{"_index":214,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["sizeinmb",{"_index":1057,"title":{},"body":{"components/UploadFileModal.html":{}}}],["solid",{"_index":583,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["sony",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortable",{"_index":918,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"index.html":{}}}],["space",{"_index":564,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/UploadFileModal.html":{}}}],["spacing",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["span",{"_index":723,"title":{},"body":{"components/HeaderComponent.html":{}}}],["specifications",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":1298,"title":{},"body":{"index.html":{}}}],["spin",{"_index":780,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["spinner",{"_index":775,"title":{},"body":{"components/LoadingScreenComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["src/.../app.config.ts",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../file.utils.ts",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:12",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["src/app/commons/components/custom",{"_index":905,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"coverage.html":{}}}],["src/app/commons/components/footer/footer.ts",{"_index":660,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/commons/components/footer/footer.ts:60",{"_index":675,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/commons/components/header/header.ts",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/commons/components/header/header.ts:13",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/header/header.ts:14",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/header/header.ts:21",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/header/header.ts:25",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/header/header.ts:29",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/header/header.ts:33",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/header/header.ts:38",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/commons/components/toast",{"_index":985,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/commons/initializers/db",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/commons/pipes/phone",{"_index":891,"title":{},"body":{"pipes/PhoneNumberPipe.html":{},"coverage.html":{}}}],["src/app/commons/services/toast.service.ts",{"_index":970,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/commons/services/toast.service.ts:14",{"_index":1016,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/services/toast.service.ts:15",{"_index":1015,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/services/toast.service.ts:17",{"_index":1013,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/services/toast.service.ts:21",{"_index":1011,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/services/toast.service.ts:25",{"_index":1012,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/services/toast.service.ts:29",{"_index":1014,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/services/toast.service.ts:36",{"_index":1010,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/commons/utils/file.utils.ts",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":77,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:14",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:26",{"_index":886,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/guards/auth.guard.ts:32",{"_index":887,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/guards/auth.guard.ts:8",{"_index":84,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/pages/files/components/upload/upload.ts",{"_index":1017,"title":{},"body":{"components/UploadFileModal.html":{},"coverage.html":{}}}],["src/app/pages/files/components/upload/upload.ts:16",{"_index":1044,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:17",{"_index":1032,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:18",{"_index":1043,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:19",{"_index":1031,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:22",{"_index":1033,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:26",{"_index":1040,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:33",{"_index":1036,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:38",{"_index":1038,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:46",{"_index":1042,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/components/upload/upload.ts:50",{"_index":1041,"title":{},"body":{"components/UploadFileModal.html":{}}}],["src/app/pages/files/files.ts",{"_index":322,"title":{},"body":{"components/FilesCompoenent.html":{},"coverage.html":{}}}],["src/app/pages/files/files.ts:135",{"_index":363,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:166",{"_index":380,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:173",{"_index":382,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:180",{"_index":375,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:187",{"_index":378,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:192",{"_index":372,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:203",{"_index":367,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:223",{"_index":365,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:239",{"_index":369,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:243",{"_index":386,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:249",{"_index":383,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:33",{"_index":411,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:34",{"_index":416,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:35",{"_index":407,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:36",{"_index":420,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:37",{"_index":418,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:38",{"_index":430,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:39",{"_index":429,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:40",{"_index":434,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:41",{"_index":435,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:42",{"_index":432,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:44",{"_index":437,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:46",{"_index":409,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:48",{"_index":428,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:55",{"_index":439,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:56",{"_index":415,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:58",{"_index":408,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:59",{"_index":433,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:61",{"_index":405,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:70",{"_index":398,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:83",{"_index":362,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:93",{"_index":370,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/files/files.ts:97",{"_index":368,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["src/app/pages/loading",{"_index":770,"title":{},"body":{"components/LoadingScreenComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.ts",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.ts:16",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:17",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:18",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:19",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:20",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:28",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:35",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:37",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:49",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.ts:76",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/users/add",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/users/users.ts",{"_index":1114,"title":{},"body":{"components/Users.html":{},"coverage.html":{}}}],["src/app/pages/users/users.ts:117",{"_index":1135,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:127",{"_index":1129,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:139",{"_index":1133,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:144",{"_index":1136,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:23",{"_index":1162,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:24",{"_index":1142,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:25",{"_index":1149,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:26",{"_index":1144,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:27",{"_index":1158,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:28",{"_index":1157,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:29",{"_index":1160,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:30",{"_index":1159,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:31",{"_index":1147,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:32",{"_index":1146,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:33",{"_index":1145,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:35",{"_index":1141,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:44",{"_index":1138,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:59",{"_index":1143,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:61",{"_index":1156,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:71",{"_index":1128,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:75",{"_index":1131,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:79",{"_index":1130,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:91",{"_index":1134,"title":{},"body":{"components/Users.html":{}}}],["src/app/pages/users/users.ts:96",{"_index":1132,"title":{},"body":{"components/Users.html":{}}}],["src/app/services/auth.service.ts",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:12",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:52",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:59",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/indexed",{"_index":188,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["st",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":325,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["start",{"_index":421,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{},"index.html":{}}}],["started",{"_index":1256,"title":{"index.html":{}},"body":{}}],["state",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["state.url",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["statements",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["storeduser",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":25,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":321,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["styles.scss",{"_index":544,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/Users.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["styleurls",{"_index":328,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["submit",{"_index":1073,"title":{},"body":{"components/UploadFileModal.html":{}}}],["submitted",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":471,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["success",{"_index":601,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["successfully",{"_index":536,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["such",{"_index":1287,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1315,"title":{},"body":{"index.html":{}}}],["sure",{"_index":530,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["svg",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swf",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":507,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["switchmap",{"_index":198,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["switchmap(existinguser",{"_index":311,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["switchmap(files",{"_index":465,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["table",{"_index":444,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":53,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["table.html",{"_index":920,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["table.scss",{"_index":921,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["table.ts",{"_index":906,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"coverage.html":{}}}],["table/custom",{"_index":443,"title":{},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{},"coverage.html":{}}}],["tableaction",{"_index":388,"title":{"interfaces/TableAction.html":{}},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":399,"title":{"interfaces/TableColumn.html":{}},"body":{"components/FilesCompoenent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/Users.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":613,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["tap",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["tap((files",{"_index":285,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["tap(user",{"_index":271,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["td",{"_index":591,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["team",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["term",{"_index":1177,"title":{},"body":{"components/Users.html":{}}}],["test",{"_index":1303,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1309,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1307,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1300,"title":{},"body":{"index.html":{}}}],["tex",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":593,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"miscellaneous/variables.html":{}}}],["text/csv",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/markdown",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/plain",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["th",{"_index":590,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this._actions",{"_index":954,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._actions().length",{"_index":936,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._columns",{"_index":955,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._columns().map(col",{"_index":934,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._currentpage",{"_index":944,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._currentpage.set(1",{"_index":964,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._data",{"_index":950,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._emptymessage",{"_index":953,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._loading",{"_index":951,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._pagesize",{"_index":939,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this._totalitems",{"_index":960,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this.actionclick.emit",{"_index":967,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this.applyfilters",{"_index":474,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.authservice.currentuservalue",{"_index":458,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["this.authservice.isadmin",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LoginGuard.html":{}}}],["this.authservice.login(this.f['email'].value",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":540,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{}}}],["this.close",{"_index":1068,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.closed.emit",{"_index":1047,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.closemenu",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.currentpage",{"_index":422,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.currentpage.set(1",{"_index":475,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.currentpage.set(event.pageindex",{"_index":504,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.currentuser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"components/FilesCompoenent.html":{}}}],["this.currentusersubject",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.asobservable",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(json.parse(storeduser",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(user",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.value",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuservalue",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuservalue?.role",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db",{"_index":233,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["this.db_version",{"_index":236,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["this.dbservice.addfile",{"_index":1062,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.dbservice.deletefile(file.id).subscribe",{"_index":533,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.dbservice.deleteuser(event.item.id).subscribe",{"_index":1171,"title":{},"body":{"components/Users.html":{}}}],["this.dbservice.getallfiles",{"_index":462,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.dbservice.getallusers().subscribe",{"_index":1166,"title":{},"body":{"components/Users.html":{}}}],["this.dbservice.getauthorname(file.user_id).pipe",{"_index":468,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.dbservice.getfilesbyuser(currentuser.id",{"_index":463,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.deletefile(event.item",{"_index":512,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.downloadfile(event.item",{"_index":510,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.emaildomainvalidator",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ensuredb().pipe",{"_index":261,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["this.error",{"_index":798,"title":{},"body":{"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{}}}],["this.f['password'].value).subscribe",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.files",{"_index":478,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.files.set(files",{"_index":473,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.filteredfiles",{"_index":426,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.filteredfiles().length",{"_index":438,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.filteredfiles.set(filtered",{"_index":495,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.filteredusers().length",{"_index":1161,"title":{},"body":{"components/Users.html":{}}}],["this.filteredusers().slice(start",{"_index":1150,"title":{},"body":{"components/Users.html":{}}}],["this.filteredusers.set(filtered",{"_index":1182,"title":{},"body":{"components/Users.html":{}}}],["this.formbuilder.group",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidepassword",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidetoast",{"_index":982,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.indexeddbservice.getuserbyemail(email).pipe",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initializedatabase",{"_index":792,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this.isadmin",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ismenuopen.set(false",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ismenuopen.update(value",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.loadfiles",{"_index":459,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.loading",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loading.set(false",{"_index":477,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.loading.set(true",{"_index":460,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.loadusers",{"_index":1165,"title":{},"body":{"components/Users.html":{}}}],["this.loginform",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onpagechange",{"_index":957,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this.overview",{"_index":1066,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.pagechange.emit",{"_index":965,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this.pagechange.emit(event",{"_index":968,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this.pagesize",{"_index":423,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.pagesize.set(event.pagesize",{"_index":505,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.ready",{"_index":228,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["this.ready$.pipe",{"_index":256,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['/files",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{}}}],["this.router.navigate(['/login",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoadingScreenComponent.html":{},"guards/LoginGuard.html":{}}}],["this.searchdate",{"_index":487,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.searchdate.set(input.value",{"_index":503,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.searchdebouncetimeout",{"_index":1174,"title":{},"body":{"components/Users.html":{}}}],["this.searchterm",{"_index":484,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.searchterm().tolowercase",{"_index":1178,"title":{},"body":{"components/Users.html":{}}}],["this.searchterm.set(input.value",{"_index":499,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["this.selectedcategory",{"_index":482,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.selectedcategory.set(category",{"_index":541,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.selectedfile",{"_index":1050,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.selectedfile.name",{"_index":1063,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.selectedfile.name.split('.').pop()?.tolowercase",{"_index":1064,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.selectedfile.size",{"_index":1058,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.selectedtype",{"_index":494,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.selectedtype.set(select.value",{"_index":502,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.selecteduserid",{"_index":1168,"title":{},"body":{"components/Users.html":{}}}],["this.showtoast(message",{"_index":976,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.showuploadmodal.set(true",{"_index":542,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["this.showusermodal",{"_index":1170,"title":{},"body":{"components/Users.html":{}}}],["this.submitted",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastservice.showerror('failed",{"_index":537,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["this.toastservice.showsuccess('file",{"_index":534,"title":{},"body":{"components/FilesCompoenent.html":{},"components/UploadFileModal.html":{}}}],["this.toastservice.showsuccess('user",{"_index":1172,"title":{},"body":{"components/Users.html":{}}}],["this.toastsubject.asobservable",{"_index":974,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next",{"_index":980,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.totalpages",{"_index":943,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["this.uploaded.emit",{"_index":1069,"title":{},"body":{"components/UploadFileModal.html":{}}}],["this.users",{"_index":1176,"title":{},"body":{"components/Users.html":{}}}],["this.users.set(users",{"_index":1167,"title":{},"body":{"components/Users.html":{}}}],["throw",{"_index":254,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["tif",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiff",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["toast",{"_index":969,"title":{"interfaces/Toast.html":{}},"body":{"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toast'},{'name",{"_index":65,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["toast.error",{"_index":1001,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.info",{"_index":1003,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.message",{"_index":995,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.show",{"_index":997,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.success",{"_index":999,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":64,"title":{"components/ToastComponent.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["toastservice",{"_index":361,"title":{"injectables/ToastService.html":{}},"body":{"components/FilesCompoenent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["toastsubject",{"_index":973,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["today",{"_index":345,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["toggle",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["togglemenu",{"_index":684,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglepasswordvisibility",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["tolowercase().includes(term",{"_index":1181,"title":{},"body":{"components/Users.html":{}}}],["toolbar",{"_index":609,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["tools",{"_index":1282,"title":{},"body":{"index.html":{}}}],["top",{"_index":603,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["top:200px",{"_index":1108,"title":{},"body":{"components/UploadFileModal.html":{}}}],["total",{"_index":942,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["totalitems",{"_index":346,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["totalpages",{"_index":937,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["transform",{"_index":644,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"pipes/PhoneNumberPipe.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["transform(value",{"_index":894,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["transition",{"_index":624,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["translate",{"_index":1081,"title":{},"body":{"components/UploadFileModal.html":{}}}],["translate(0",{"_index":1107,"title":{},"body":{"components/UploadFileModal.html":{}}}],["translatex(0",{"_index":740,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatex(20px",{"_index":738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translatey",{"_index":645,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/Users.html":{}}}],["translatey(0",{"_index":998,"title":{},"body":{"components/ToastComponent.html":{}}}],["trash",{"_index":397,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["true",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":232,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{}}}],["ts",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["txt",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":23,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"pipes/PhoneNumberPipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1328,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u.id",{"_index":294,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["unique",{"_index":244,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["unit",{"_index":1299,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":301,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["unset",{"_index":658,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{}}}],["updated_at",{"_index":213,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"components/Users.html":{}}}],["updated_on",{"_index":220,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["updateduser",{"_index":314,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["updateduser)).pipe",{"_index":316,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["updates",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuser",{"_index":751,"title":{},"body":{"injectables/IndexedDBService.html":{}}}],["updateuser(id",{"_index":309,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["updating",{"_index":317,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["upgrade(db",{"_index":237,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["upload",{"_index":67,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["upload.html",{"_index":1020,"title":{},"body":{"components/UploadFileModal.html":{}}}],["upload.scss",{"_index":1019,"title":{},"body":{"components/UploadFileModal.html":{}}}],["uploaded",{"_index":1029,"title":{},"body":{"components/UploadFileModal.html":{}}}],["uploadfilemodal",{"_index":66,"title":{"components/UploadFileModal.html":{}},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{},"coverage.html":{}}}],["uploading",{"_index":1070,"title":{},"body":{"components/UploadFileModal.html":{}}}],["url",{"_index":215,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":543,"title":{},"body":{"components/FilesCompoenent.html":{},"components/LoginComponent.html":{},"components/Users.html":{},"index.html":{}}}],["user",{"_index":142,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":49,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["user.address.length",{"_index":1154,"title":{},"body":{"components/Users.html":{}}}],["user.address[0",{"_index":1153,"title":{},"body":{"components/Users.html":{}}}],["user.email.includes(email",{"_index":270,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["user.email.join",{"_index":1152,"title":{},"body":{"components/Users.html":{}}}],["user.name.tolowercase().includes(term",{"_index":1180,"title":{},"body":{"components/Users.html":{}}}],["user.password",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ts",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["user/add",{"_index":1164,"title":{},"body":{"components/Users.html":{},"coverage.html":{}}}],["user12345",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.name",{"_index":300,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["user@fmanage.com",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":218,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":278,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["users",{"_index":69,"title":{"components/Users.html":{}},"body":{"components/App.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"coverage.html":{}}}],["users.find(u",{"_index":293,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["users.find(user",{"_index":269,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["users.html",{"_index":1116,"title":{},"body":{"components/Users.html":{}}}],["users.scss",{"_index":1115,"title":{},"body":{"components/Users.html":{}}}],["userstore",{"_index":239,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["userstore.createindex('by",{"_index":243,"title":{},"body":{"interfaces/FManageDB.html":{},"interfaces/File.html":{},"injectables/IndexedDBService.html":{},"interfaces/User.html":{}}}],["using",{"_index":1259,"title":{},"body":{"index.html":{}}}],["valid",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{},"components/Users.html":{}}}],["validators.email",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(8",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":27,"title":{},"body":{"components/App.html":{},"interfaces/FManageDB.html":{},"interfaces/File.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IndexedDBService.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"pipes/PhoneNumberPipe.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"interfaces/User.html":{},"components/Users.html":{},"miscellaneous/variables.html":{}}}],["value.replace(/\\d/g",{"_index":898,"title":{},"body":{"pipes/PhoneNumberPipe.html":{}}}],["values",{"_index":932,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/App.html":{},"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["variable",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1332,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vbr",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1262,"title":{},"body":{"index.html":{},"properties.html":{}}}],["video",{"_index":1330,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["video/3gpp",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mp2t",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mp4",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mpeg",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/ogg",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/quicktime",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/webm",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/x",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video_extensions",{"_index":1212,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["videos",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visibility",{"_index":736,"title":{},"body":{"components/HeaderComponent.html":{}}}],["visible",{"_index":739,"title":{},"body":{"components/HeaderComponent.html":{}}}],["visit",{"_index":1323,"title":{},"body":{"index.html":{}}}],["vob",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"injectables/ToastService.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["want",{"_index":531,"title":{},"body":{"components/FilesCompoenent.html":{},"components/Users.html":{}}}],["webm",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webp",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":597,"title":{},"body":{"components/FilesCompoenent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["whenever",{"_index":1276,"title":{},"body":{"index.html":{}}}],["white",{"_index":584,"title":{},"body":{"components/FilesCompoenent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{}}}],["width",{"_index":400,"title":{},"body":{"components/FilesCompoenent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LoginComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableColumn.html":{},"components/UploadFileModal.html":{},"components/Users.html":{}}}],["window.url.createobjecturl(blob",{"_index":519,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":528,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["wmv",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":1097,"title":{},"body":{"components/UploadFileModal.html":{}}}],["works",{"_index":994,"title":{},"body":{"components/ToastComponent.html":{}}}],["wrap",{"_index":610,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["x",{"_index":587,"title":{},"body":{"components/FilesCompoenent.html":{}}}],["xls",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlsb",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlsm",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlsx",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlt",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xltx",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":722,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ToastComponent.html":{},"components/UploadFileModal.html":{}}}],["zone.js",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'f-manage'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from './commons/components/header/header';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  protected title = 'f-manage';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n      return false;\n    }\n    return true;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    console.log(this.authService.isAuthenticated())\n\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/files']);\n      return false;\n    }\n    return true;\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, indexedDBService: IndexedDBService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        indexedDBService\n                                                  \n                                                        \n                                                                        IndexedDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth.service.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, from } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { IndexedDBService, User } from './indexed-db.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(\n    private router: Router,\n    private indexedDBService: IndexedDBService\n  ) {\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser = this.currentUserSubject.asObservable();\n    \n    // Check localStorage for existing session\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      this.currentUserSubject.next(JSON.parse(storedUser));\n    }\n  }\n\n  public get currentUserValue(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): Observable {\n    console.log(email, password)\n    return this.indexedDBService.getUserByEmail(email).pipe(\n      map(user => {\n        console.log(user)\n        if (user && user.password === password) {\n          // Store user details and token in local storage\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          this.currentUserSubject.next(user);\n          return true;\n        }\n        return false;\n      }),\n      catchError(error => {\n        console.error('Login error:', error);\n        return from(Promise.resolve(false));\n      })\n    );\n  }\n\n  logout() {\n    // Remove user from local storage and set current user to null\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.currentUserValue;\n  }\n\n  isAdmin(): boolean {\n    return this.currentUserValue?.role === 'admin';\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FManageDB.html":{"url":"interfaces/FManageDB.html","title":"interface - FManageDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FManageDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/indexed-db.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DBSchema\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { Observable, from, defer } from 'rxjs';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { initializeDatabase } from '../commons/initializers/db-initial';\n\ninterface FManageDB extends DBSchema {\n  users: {\n    key: string;\n    value: User;\n    indexes: { 'by-email': string };\n  };\n  files: {\n    key: string;\n    value: File;\n    indexes: { 'by-user': string, 'by-overview': string };\n  };\n}\n\nexport interface User {\n  id?: string;\n  email: string[];\n  password: string;\n  name: string;\n  role: 'admin' | 'user';\n  date_of_birth: string;\n  gender: string;\n  address: string[];\n  contact: string[];\n  created_at?: Date;\n  updated_at?: Date;\n}\n\nexport interface File {\n  id?: string;\n  name: string;\n  type: string;\n  size: string;\n  url: string;\n  data?: Blob;\n  user_id: string;\n  overview: string;\n  created_on?: Date;\n  updated_on?: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBService {\n  private db: IDBPDatabase | null = null;\n  private readonly DB_NAME = 'fmanage-db';\n  private readonly DB_VERSION = 1;\n  private ready$: Observable;\n\n  constructor() {\n    this.ready$ = from(this.initDB());\n  }\n\n  private async initDB() {\n    try {\n      this.db = await openDB(this.DB_NAME, this.DB_VERSION, {\n        upgrade(db: IDBPDatabase) {\n          if (!db.objectStoreNames.contains('users')) {\n            const userStore = db.createObjectStore('users', { keyPath: 'id', autoIncrement: true });\n            userStore.createIndex('by-email', 'email', { unique: false });\n          }\n\n          if (!db.objectStoreNames.contains('files')) {\n            const fileStore = db.createObjectStore('files', { keyPath: 'id', autoIncrement: true });\n            fileStore.createIndex('by-user', 'user_id');\n            fileStore.createIndex('by-overview', 'overview', { unique: false });\n          }\n        }\n      });\n\n       initializeDatabase(this);\n    } catch (error) {\n      console.error('Error initializing IndexedDB:', error);\n      throw error;\n    }\n  }\n\n  private ensureDB(): Observable {\n    return this.ready$.pipe(\n      tap(() => {\n        if (!this.db) {\n          throw new Error('Database not initialized');\n        }\n      })\n    );\n  }\n\n  addUser(user: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('users', {\n        ...user,\n        created_at: new Date(),\n        updated_at: new Date()\n      }))),\n      map(id => ({ ...user, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getUserByEmail(email: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => users.find(user => user.email.includes(email))),\n      tap(user => console.log('Retrieved user:', user))\n    );\n  }\n\n  getAllUsers(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users')))\n    );\n  }\n\n  addFile(file: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('files', {\n        ...file,\n        created_on: new Date(),\n        updated_on: new Date()\n      }))),\n      map(id => ({ ...file, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding file:', error);\n        throw error;\n      })\n    );\n  }\n\n  getFilesByUser(userId: string): Observable {\n    console.log('Getting files for userId:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => {\n        console.log('Database ready, querying files...');\n        return from(this.db!.getAll('files'));\n      }),\n      map(files => files.filter(file => file.user_id == userId)),\n      tap((files: File[]) => {\n        console.log('Retrieved files:', files);\n        if (!files || files.length === 0) {\n          console.log('No files found for user:', userId);\n        }\n      }),\n      catchError(error => {\n        console.error('Error getting files by user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getAuthorName(userId: string): Observable {\n    console.log('Looking for user with ID:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => {\n        let user = users.find(u => u.id === userId);\n                if (!user) {\n          const numericId = parseInt(userId, 10);\n          if (!isNaN(numericId)) {\n            user = users.find(u => parseInt(u.id || '', 10) === numericId);\n          }\n        }\n        return user?.name || 'Unknown Author';\n      }),\n    );\n  }\n  \n\n  getAllFiles(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('files')))\n    );\n  }\n\n  deleteFile(fileId: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('files', fileId)))\n    );\n  }\n\n  getUserById(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      map(user => user || null)\n    );\n  }\n\n  updateUser(id: string, data: Partial): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      switchMap(existingUser => {\n        if (!existingUser) throw new Error('User not found');\n        const updatedUser = { ...existingUser, ...data, updated_at: new Date() };\n        return from(this.db!.put('users', updatedUser)).pipe(\n          map(() => updatedUser)\n        );\n      }),\n      catchError(error => {\n        console.error('Error updating user:', error);\n        throw error;\n      })\n    );\n  }\n\n  deleteUser(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('users', id))),\n      catchError(error => {\n        console.error('Error deleting user:', error);\n        throw error;\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/indexed-db.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_on\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            overview\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_on\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_on:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Blob\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Blob\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overview:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_on\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_on:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { Observable, from, defer } from 'rxjs';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { initializeDatabase } from '../commons/initializers/db-initial';\n\ninterface FManageDB extends DBSchema {\n  users: {\n    key: string;\n    value: User;\n    indexes: { 'by-email': string };\n  };\n  files: {\n    key: string;\n    value: File;\n    indexes: { 'by-user': string, 'by-overview': string };\n  };\n}\n\nexport interface User {\n  id?: string;\n  email: string[];\n  password: string;\n  name: string;\n  role: 'admin' | 'user';\n  date_of_birth: string;\n  gender: string;\n  address: string[];\n  contact: string[];\n  created_at?: Date;\n  updated_at?: Date;\n}\n\nexport interface File {\n  id?: string;\n  name: string;\n  type: string;\n  size: string;\n  url: string;\n  data?: Blob;\n  user_id: string;\n  overview: string;\n  created_on?: Date;\n  updated_on?: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBService {\n  private db: IDBPDatabase | null = null;\n  private readonly DB_NAME = 'fmanage-db';\n  private readonly DB_VERSION = 1;\n  private ready$: Observable;\n\n  constructor() {\n    this.ready$ = from(this.initDB());\n  }\n\n  private async initDB() {\n    try {\n      this.db = await openDB(this.DB_NAME, this.DB_VERSION, {\n        upgrade(db: IDBPDatabase) {\n          if (!db.objectStoreNames.contains('users')) {\n            const userStore = db.createObjectStore('users', { keyPath: 'id', autoIncrement: true });\n            userStore.createIndex('by-email', 'email', { unique: false });\n          }\n\n          if (!db.objectStoreNames.contains('files')) {\n            const fileStore = db.createObjectStore('files', { keyPath: 'id', autoIncrement: true });\n            fileStore.createIndex('by-user', 'user_id');\n            fileStore.createIndex('by-overview', 'overview', { unique: false });\n          }\n        }\n      });\n\n       initializeDatabase(this);\n    } catch (error) {\n      console.error('Error initializing IndexedDB:', error);\n      throw error;\n    }\n  }\n\n  private ensureDB(): Observable {\n    return this.ready$.pipe(\n      tap(() => {\n        if (!this.db) {\n          throw new Error('Database not initialized');\n        }\n      })\n    );\n  }\n\n  addUser(user: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('users', {\n        ...user,\n        created_at: new Date(),\n        updated_at: new Date()\n      }))),\n      map(id => ({ ...user, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getUserByEmail(email: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => users.find(user => user.email.includes(email))),\n      tap(user => console.log('Retrieved user:', user))\n    );\n  }\n\n  getAllUsers(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users')))\n    );\n  }\n\n  addFile(file: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('files', {\n        ...file,\n        created_on: new Date(),\n        updated_on: new Date()\n      }))),\n      map(id => ({ ...file, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding file:', error);\n        throw error;\n      })\n    );\n  }\n\n  getFilesByUser(userId: string): Observable {\n    console.log('Getting files for userId:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => {\n        console.log('Database ready, querying files...');\n        return from(this.db!.getAll('files'));\n      }),\n      map(files => files.filter(file => file.user_id == userId)),\n      tap((files: File[]) => {\n        console.log('Retrieved files:', files);\n        if (!files || files.length === 0) {\n          console.log('No files found for user:', userId);\n        }\n      }),\n      catchError(error => {\n        console.error('Error getting files by user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getAuthorName(userId: string): Observable {\n    console.log('Looking for user with ID:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => {\n        let user = users.find(u => u.id === userId);\n                if (!user) {\n          const numericId = parseInt(userId, 10);\n          if (!isNaN(numericId)) {\n            user = users.find(u => parseInt(u.id || '', 10) === numericId);\n          }\n        }\n        return user?.name || 'Unknown Author';\n      }),\n    );\n  }\n  \n\n  getAllFiles(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('files')))\n    );\n  }\n\n  deleteFile(fileId: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('files', fileId)))\n    );\n  }\n\n  getUserById(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      map(user => user || null)\n    );\n  }\n\n  updateUser(id: string, data: Partial): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      switchMap(existingUser => {\n        if (!existingUser) throw new Error('User not found');\n        const updatedUser = { ...existingUser, ...data, updated_at: new Date() };\n        return from(this.db!.put('users', updatedUser)).pipe(\n          map(() => updatedUser)\n        );\n      }),\n      catchError(error => {\n        console.error('Error updating user:', error);\n        throw error;\n      })\n    );\n  }\n\n  deleteUser(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('users', id))),\n      catchError(error => {\n        console.error('Error deleting user:', error);\n        throw error;\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilesCompoenent.html":{"url":"components/FilesCompoenent.html","title":"component - FilesCompoenent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilesCompoenent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/files/files.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                                CustomTableComponent\n                                UploadFileModal\n                                ToastComponent\n                \n            \n\n            \n                styleUrls\n                ./files.scss\n            \n\n\n\n            \n                templateUrl\n                ./files.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                columns\n                            \n                            \n                                currentPage\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Readonly\n                                FILE_CATEGORIES\n                            \n                            \n                                files\n                            \n                            \n                                fileTypes\n                            \n                            \n                                filteredFiles\n                            \n                            \n                                loading\n                            \n                            \n                                pageSize\n                            \n                            \n                                paginatedFiles\n                            \n                            \n                                searchDate\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                selectedTab\n                            \n                            \n                                selectedType\n                            \n                            \n                                showUploadModal\n                            \n                            \n                                today\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                deleteFile\n                            \n                            \n                                downloadFile\n                            \n                            \n                                loadFiles\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onActionClick\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onPageChange\n                            \n                            \n                                onSearchChange\n                            \n                            \n                                onTypeChange\n                            \n                            \n                                onUploadFile\n                            \n                            \n                                selectTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, dbService: IndexedDBService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/files/files.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        IndexedDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:223\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadFile\n                        \n                    \n                \n            \n            \n                \ndownloadFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:239\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onActionClick\n                        \n                    \n                \n            \n            \n                \nonActionClick(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchChange\n                        \n                    \n                \n            \n            \n                \nonSearchChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTypeChange\n                        \n                    \n                \n            \n            \n                \nonTypeChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUploadFile\n                        \n                    \n                \n            \n            \n                \nonUploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:249\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTab\n                        \n                    \n                \n            \n            \n                \nselectTab(category: FileCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/files.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            FileCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableAction[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      label: 'Download',\n      action: 'download',\n      class: 'download',\n      icon: 'bi-cloud-download-fill'\n    },\n    {\n      label: 'Delete',\n      action: 'delete',\n      class: 'delete',\n      icon: 'bi-trash'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { key: 'name', label: 'File Name', width: \"20%\" },\n    { key: \"overview\", label: \"Overview\", width: \"30%\" },\n    { key: 'type', label: 'Type' },\n    { key: 'size', label: 'Size' },\n    { key: 'authorName', label: 'Author' },\n    { key: 'created_on', label: 'Created On', type: 'date' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FILE_CATEGORIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FILE_CATEGORIES\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => [...new Set(this.files().map(file => file.type))])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(5)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const start = (this.currentPage() - 1) * this.pageSize();\n    const end = start + this.pageSize();\n    const filtered = this.filteredFiles();\n    return filtered.slice(start, end);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('All')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'All'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUploadModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().toISOString().split('T')[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.filteredFiles().length)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/files.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { HeaderComponent } from '../../commons/components/header/header';\nimport { CustomTableComponent, TableColumn, TableAction } from '../../commons/components/custom-table/custom-table';\nimport { IndexedDBService, File } from '../../services/indexed-db.service';\nimport { UploadFileModal } from './components/upload/upload';\nimport { PageEvent } from '@angular/material/paginator';\nimport { FileCategory, FILE_CATEGORIES, filterFilesByCategory, getMimeType } from '../../commons/utils/file.utils';\nimport { switchMap, map, forkJoin, tap } from 'rxjs';\nimport { FooterComponent } from '../../commons/components/footer/footer';\nimport { ToastComponent } from '../../commons/components/toast-notification/toast-notification';\nimport { ToastService } from '../../commons/services/toast.service';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule, \n    FormsModule, \n    HeaderComponent, \n    CustomTableComponent, \n    UploadFileModal, \n    // FooterComponent,\n    ToastComponent\n  ],\n  templateUrl: \"./files.html\",\n  styleUrls: [\"./files.scss\"],\n})\nexport class FilesCompoenent implements OnInit {\n  // Signals\n  files = signal([]);\n  filteredFiles = signal([]);\n  currentPage = signal(1);\n  pageSize = signal(5);\n  loading = signal(false);\n  searchTerm = signal('');\n  searchDate = signal('');\n  selectedType = signal('');\n  showUploadModal = signal(false);\n  selectedCategory = signal('All');\n\n  today = new Date().toISOString().split('T')[0];\n\n  readonly FILE_CATEGORIES = FILE_CATEGORIES;\n\n  paginatedFiles = computed(() => {\n    const start = (this.currentPage() - 1) * this.pageSize();\n    const end = start + this.pageSize();\n    const filtered = this.filteredFiles();\n    return filtered.slice(start, end);\n  });\n\n  totalItems = computed(() => this.filteredFiles().length);\n  fileTypes = computed(() => [...new Set(this.files().map(file => file.type))]);\n\n  currentUser: any;\n  selectedTab: string = 'All';\n\n  columns: TableColumn[] = [\n    { key: 'name', label: 'File Name', width: \"20%\" },\n    { key: \"overview\", label: \"Overview\", width: \"30%\" },\n    { key: 'type', label: 'Type' },\n    { key: 'size', label: 'Size' },\n    { key: 'authorName', label: 'Author' },\n    { key: 'created_on', label: 'Created On', type: 'date' }\n  ];\n\n  actions: TableAction[] = [\n    {\n      label: 'Download',\n      action: 'download',\n      class: 'download',\n      icon: 'bi-cloud-download-fill'\n    },\n    {\n      label: 'Delete',\n      action: 'delete',\n      class: 'delete',\n      icon: 'bi-trash'\n    }\n  ];\n\n  constructor(\n    private authService: AuthService,\n    private dbService: IndexedDBService,\n    private toastService: ToastService\n  ) {\n    this.currentUser = this.authService.currentUserValue;\n  }\n\n  ngOnInit() {\n    this.loadFiles();\n  }\n\n  loadFiles() {\n    this.loading.set(true);\n    const currentUser = this.authService.currentUserValue;\n    if (!currentUser) return;\n\n    const files$ = currentUser.role === 'admin'\n      ? this.dbService.getAllFiles()\n      : this.dbService.getFilesByUser(currentUser.id || '');\n\n    files$.pipe(\n      switchMap(files => {\n        const filesWithAuthors$ = files.map(file => \n          this.dbService.getAuthorName(file.user_id).pipe(\n            map(authorName => ({\n              ...file,\n              authorName\n            }))\n          )\n        );\n        \n        return forkJoin(filesWithAuthors$);\n      }),\n    ).subscribe({\n      next: (files) => {\n        this.files.set(files);\n        this.applyFilters();\n\n        this.currentPage.set(1);\n      },\n      error: (error) => {\n        console.error('Error loading files:', error);\n      },\n      complete: () => {\n        this.loading.set(false);\n      }\n    });\n  }\n\n  applyFilters() {\n    let filtered = this.files();\n    \n    // Apply category filter\n    filtered = filterFilesByCategory(filtered, this.selectedCategory());\n    \n    // Apply search filter\n    if (this.searchTerm()) {\n      filtered = filtered.filter(file => \n        file.name.toLowerCase().includes(this.searchTerm().toLowerCase())\n      );\n    }\n\n    // Apply date filter\n    if (this.searchDate()) {\n      const searchDate = new Date(this.searchDate());\n      filtered = filtered.filter(file => {\n        if (!file.created_on) return false;\n        const fileDate = new Date(file.created_on);\n        return fileDate.toDateString() === searchDate.toDateString();\n      });\n    }\n\n    // Apply type filter\n    if (this.selectedType()) {\n      filtered = filtered.filter(file => file.type === this.selectedType());\n    }\n\n    this.filteredFiles.set(filtered);\n  }\n\n  onSearchChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.searchTerm.set(input.value);\n    this.currentPage.set(1);\n    this.applyFilters();\n  }\n\n  onTypeChange(event: Event) {\n    const select = event.target as HTMLSelectElement;\n    this.selectedType.set(select.value);\n    this.currentPage.set(1);\n    this.applyFilters();\n  }\n\n  onDateChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.searchDate.set(input.value);\n    this.currentPage.set(1);\n    this.applyFilters();\n  }\n\n  onPageChange(event: PageEvent) {\n    this.currentPage.set(event.pageIndex + 1);\n    this.pageSize.set(event.pageSize);\n  }\n\n  onActionClick(event: { action: string, item: File }) {\n    switch (event.action) {\n      case 'download':\n        this.downloadFile(event.item);\n        break;\n      case 'delete':\n        this.deleteFile(event.item);\n        break;\n    }\n  }\n\n  downloadFile(file: File) {\n    if (!file.data) {\n      console.error('No file data available');\n      return;\n    }\n    \n    const mimeType = getMimeType(file.type);\n    const blob = new Blob([file.data], { type: mimeType });\n    const url = window.URL.createObjectURL(blob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = file.name;\n    document.body.appendChild(link);\n    link.click();\n    \n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  }\n\n  deleteFile(file: File) {\n    if (confirm('Are you sure you want to delete this file?')) {\n      if (!file.id) return;\n      this.dbService.deleteFile(file.id).subscribe({\n        next: () => {\n          this.toastService.showSuccess('File deleted successfully!');\n          this.loadFiles();\n        },\n        error: (error) => {\n          console.error('Error deleting file:', error);\n          this.toastService.showError('Failed to delete file. Please try again.');\n        }\n      });\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  selectTab(category: FileCategory) {\n    this.selectedCategory.set(category);\n    this.currentPage.set(1);\n    this.applyFilters();\n  }\n\n  onUploadFile() {\n    this.showUploadModal.set(true);\n  }\n} \n    \n\n    \n        \n  \n  \n  \n  \n    \n      \n        \n          {{ category }}\n        \n      \n      \n        All\n        {{ type }}\n      \n      \n        \n         -->\n      \n      \n        + Upload File\n      \n    \n\n    \n    \n  \n\n   -->\n\n\n    \n\n    \n                \n                    ./files.scss\n                \n                @use '../../../styles.scss' as *;\n\n:host {\n    display: block;\n}\n\n.files-container {\n    min-height: 100vh;\n    background-color: var(--background-color);\n}\n\n.files-content {\n    padding: 2rem;\n    // max-width: 1200px;\n    margin: 0 auto;\n}\n\n.dashboard-container {\n    padding: 2rem;\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n.dashboard-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n}\n\n.user-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.logout-btn {\n    padding: 0.5rem 1rem;\n    background-color: var(--error-color);\n    color: var(--secondary-color);\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.filters {\n    display: flex;\n    gap: 1rem;\n    margin-bottom: 1rem;\n\n    input, select {\n        padding: 0.5rem;\n        border: 1px solid var(--border-color);\n        border-radius: 4px;\n        background-color: white;\n    }\n\n    input {\n        flex: 1;\n    }\n\n    select {\n        min-width: 150px;\n    }\n}\n\n.table-container {\n    overflow-x: auto;\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n    margin-bottom: 1rem;\n}\n\nth, td {\n    padding: 0.75rem;\n    text-align: left;\n    border-bottom: 1px solid var(--table-border);\n}\n\nth {\n    background-color: var(--table-header-bg);\n    font-weight: 600;\n}\n\n.action-btn {\n    padding: 0.25rem 0.5rem;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-right: 0.5rem;\n}\n\n.download {\n    background-color: var(--success-color);\n    color: var(--secondary-color);\n}\n\n.delete {\n    background-color: var(--error-color);\n    color: var(--secondary-color);\n}\n\n.pagination {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n    margin-top: 1rem;\n}\n\n.page-btn {\n    padding: 0.5rem 1rem;\n    background-color: var(--button-primary);\n    color: var(--secondary-color);\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.page-btn:disabled {\n    background-color: var(--border-color);\n    cursor: not-allowed;\n}\n\n.files-toolbar {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 16px;\n    margin-bottom: 24px;\n}\n\n.tabs {\n    display: flex;\n}\n\n.tabs button {\n    background: #fff;\n    border: 1px solid #e0e0e0;\n    color: var(--text-secondary);\n    padding: 8px 20px;\n    font-weight: 500;\n    font-family: \"Inter\", sans-serif;\n    cursor: pointer;\n    outline: none;\n    transition: background 0.2s, color 0.2s;\n    font-size: 1rem;\n}\n\n.tabs button:first-child{\n    border-top-left-radius: 6px;\n    border-bottom-left-radius: 6px;\n}\n\n.tabs button:last-child{\n    border-top-right-radius: 6px;\n    border-bottom-right-radius: 6px;\n}\n\n.tabs button.active {\n    background: #007aff;\n    color: #fff;\n    border-bottom: 2px solid #007aff;\n}\n\n\n\n.type-select {\n    padding: 8px 12px;\n    border-radius: 6px;\n    border: 1px solid #e0e0e0;\n    background: #fff;\n    font-size: 15px;\n    min-width: 150px;\n}\n\n\n.search-group {\n    position: relative;\n    display: flex;\n    align-items: center;\n    \n    .search-input {\n        padding: 8px 12px;\n        padding-right: 10px;\n        border: 1px solid #e0e0e0;\n        border-radius: 4px;\n        font-size: 14px;\n        width: 180px;\n    }\n    \n    .search-icon {\n        position: absolute;\n        right: -25px;\n        top: 50%;\n        transform: translateY(-50%);\n        color: #888;\n        font-size: 14px;\n        pointer-events: none;\n    }\n}\n\n.upload-btn {\n    margin-left: auto;\n    background: #111;\n    color: #fff;\n    border: none;\n    border-radius: 8px;\n    padding: 8px 22px;\n    font-size: 16px;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    cursor: pointer;\n    transition: background 0.2s;\n}\n\n.upload-btn:hover {\n    background: #222;\n}\n\n.plus-icon {\n    font-size: 20px;\n    font-weight: bold;\n    margin-right: 4px;\n}\n\n@media (max-width: 400px) {\n    .files-toolbar {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n    .search-group{\n        width: 100%;\n    }\n    .search-input{\n        width: unset !important;\n        min-width: 100%;\n        width: 100% !important;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ category }}                            All        {{ type }}                             -->                    + Upload File                       -->'\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilesCompoenent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/commons/components/footer/footer.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n    .footer {\n      padding: 20px 0;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      min-height: 50px;\n      width: 100%;\n    }\n\n    .footer-content {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 0 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 15px;\n    }\n\n    .footer-copyright {\n      font-size: 16px;\n      color: #999;\n    }\n\n    @media (max-width: 600px) {\n      .footer {\n        padding: 15px 0;\n      }\n\n      .footer-links {\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n      }\n\n      .footer-logo-img {\n        height: 30px;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      © {{currentYear}} F-Manage. All rights reserved.\n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/commons/components/footer/footer.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    \n      \n        \n          © {{currentYear}} F-Manage. All rights reserved.\n        \n      \n    \n  `,\n  styles: [`\n    .footer {\n      padding: 20px 0;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      min-height: 50px;\n      width: 100%;\n    }\n\n    .footer-content {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 0 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 15px;\n    }\n\n    .footer-copyright {\n      font-size: 16px;\n      color: #999;\n    }\n\n    @media (max-width: 600px) {\n      .footer {\n        padding: 15px 0;\n      }\n\n      .footer-links {\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n      }\n\n      .footer-logo-img {\n        height: 30px;\n      }\n    }\n  `]\n})\nexport class FooterComponent {\n  currentYear = new Date().getFullYear();\n} \n    \n\n\n    \n            \n    .footer {\n      padding: 20px 0;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      min-height: 50px;\n      width: 100%;\n    }\n\n    .footer-content {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 0 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 15px;\n    }\n\n    .footer-copyright {\n      font-size: 16px;\n      color: #999;\n    }\n\n    @media (max-width: 600px) {\n      .footer {\n        padding: 15px 0;\n      }\n\n      .footer-links {\n        flex-direction: column;\n        align-items: center;\n        gap: 10px;\n      }\n\n      .footer-logo-img {\n        height: 30px;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            © {{currentYear}} F-Manage. All rights reserved.      '\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/commons/components/header/header.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./header.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isMenuOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                logout\n                            \n                            \n                                navigateToHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/commons/components/header/header.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/components/header/header.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/components/header/header.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToHome\n                        \n                    \n                \n            \n            \n                \nnavigateToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/components/header/header.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/components/header/header.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/components/header/header.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/commons/components/header/header.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/commons/components/header/header.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './header.html',\n  styleUrls: ['./header.scss']\n})\nexport class HeaderComponent implements OnInit {\n  isAdmin = false;\n  isMenuOpen = signal(false);\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.isAdmin = this.authService.isAdmin();\n  }\n\n  toggleMenu() {\n    this.isMenuOpen.update(value => !value);\n  }\n\n  closeMenu() {\n    this.isMenuOpen.set(false);\n  }\n\n  logout() {\n    this.closeMenu();\n    this.authService.logout();\n  }\n\n  navigateToHome() {\n    this.router.navigate(['/files']);\n  }\n}\n    \n\n    \n        \n    \n        \n        F-Manage -->\n    \n    \n        \n        \n        \n    \n    \n        @if (isAdmin) {\n            \n                Users\n            \n        }\n        \n            Files\n        \n        Logout\n    \n\n    \n\n    \n                \n                    ./header.scss\n                \n                .main-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: #000;\n    padding: 12px 24px;\n    border-radius: 12px;\n    margin: 16px;\n    position: relative;\n  }\n  \n  .logo-section {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  \n    .logo-img {\n      /* width: 36px; */\n      height: 50px;\n      border-radius: 6px;\n      background: #222;\n      object-fit: contain;\n    }\n  \n    .brand {\n      color: #bfc9db;\n      font-weight: 700;\n      font-size: 1.3rem;\n      letter-spacing: 0.5px;\n      margin-left: 4px;\n    }\n  }\n  \n  .nav-links {\n    display: flex;\n    align-items: center;\n    gap: 50px;\n  \n    .nav-link {\n      color: #fff;\n      font-weight: 700;\n      text-decoration: none;\n      font-size: 1.1rem;\n      letter-spacing: 1px;\n      position: relative;\n      transition: color 0.2s;\n  \n      &.active,\n      &:hover {\n        color: #fff;\n      }\n  \n      &.active::after,\n      &:hover::after {\n        content: '';\n        display: block;\n        margin: 0 auto;\n        width: 80%;\n        border-bottom: 2px solid #fff;\n        margin-top: 2px;\n      }\n    }\n  \n    .logout-btn {\n      background: #b94a48;\n      color: #fff;\n      border: none;\n      border-radius: 8px;\n      padding: 8px 22px;\n      font-weight: 700;\n      font-size: 1rem;\n      cursor: pointer;\n      transition: background 0.2s;\n      margin-left: 16px;\n  \n      &:hover {\n        background: #a94442;\n      }\n    }\n  }\n\n  .hamburger {\n    display: none;\n    flex-direction: column;\n    gap: 6px;\n    cursor: pointer;\n    padding: 4px;\n    z-index: 100;\n\n    span {\n        display: block;\n        width: 25px;\n        height: 3px;\n        background-color: #fff;\n        transition: all 0.3s ease;\n    }\n  }\n\n  @media (max-width: 700px) {\n    .hamburger {\n        display: flex;\n    }\n\n    .nav-links {\n        position: absolute;\n        top: 100%;\n        right: -300px;\n        width: 250px;\n        background: #000;\n        flex-direction: column;\n        padding: 16px;\n        gap: 10px;\n        transition: all 0.3s ease;\n        z-index: 99;\n        border-radius: 0 0 12px 12px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        opacity: 0;\n        visibility: hidden;\n        transform: translateX(20px);\n\n        &.active {\n            right: 0;\n            opacity: 1;\n            visibility: visible;\n            transform: translateX(0);\n        }\n\n        .nav-link {\n            width: 100%;\n            text-align: left;\n            padding: 12px 16px;\n            font-size: 1.1rem;\n            border-radius: 8px;\n\n            &:hover {\n                background: rgba(255, 255, 255, 0.1);\n            }\n\n            &.active::after,\n            &:hover::after {\n                display: none;\n            }\n        }\n\n        .logout-btn {\n            margin: 8px 0 0 0;\n            width: 100%;\n        }\n    }\n\n    .main-header {\n        margin: 8px;\n        padding: 8px 16px;\n    }\n\n    .logo-section .logo-img {\n        height: 40px;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    F-Manage -->                                                @if (isAdmin) {                            Users                    }                    Files                Logout    '\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IndexedDBService.html":{"url":"injectables/IndexedDBService.html","title":"injectable - IndexedDBService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IndexedDBService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/indexed-db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                    Readonly\n                                DB_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                DB_VERSION\n                            \n                            \n                                    Private\n                                ready$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFile\n                            \n                            \n                                addUser\n                            \n                            \n                                deleteFile\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Private\n                                ensureDB\n                            \n                            \n                                getAllFiles\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getAuthorName\n                            \n                            \n                                getFilesByUser\n                            \n                            \n                                getUserByEmail\n                            \n                            \n                                getUserById\n                            \n                            \n                                    Private\n                                    Async\n                                initDB\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/indexed-db.service.ts:54\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFile\n                        \n                    \n                \n            \n            \n                \naddFile(file: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ensureDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureDB()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFiles\n                        \n                    \n                \n            \n            \n                \ngetAllFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthorName\n                        \n                    \n                \n            \n            \n                \ngetAuthorName(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilesByUser\n                        \n                    \n                \n            \n            \n                \ngetFilesByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        initDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    initDB()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(id: string, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/indexed-db.service.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDBPDatabase | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/indexed-db.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fmanage-db'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/indexed-db.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DB_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/services/indexed-db.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/indexed-db.service.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { Observable, from, defer } from 'rxjs';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { initializeDatabase } from '../commons/initializers/db-initial';\n\ninterface FManageDB extends DBSchema {\n  users: {\n    key: string;\n    value: User;\n    indexes: { 'by-email': string };\n  };\n  files: {\n    key: string;\n    value: File;\n    indexes: { 'by-user': string, 'by-overview': string };\n  };\n}\n\nexport interface User {\n  id?: string;\n  email: string[];\n  password: string;\n  name: string;\n  role: 'admin' | 'user';\n  date_of_birth: string;\n  gender: string;\n  address: string[];\n  contact: string[];\n  created_at?: Date;\n  updated_at?: Date;\n}\n\nexport interface File {\n  id?: string;\n  name: string;\n  type: string;\n  size: string;\n  url: string;\n  data?: Blob;\n  user_id: string;\n  overview: string;\n  created_on?: Date;\n  updated_on?: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBService {\n  private db: IDBPDatabase | null = null;\n  private readonly DB_NAME = 'fmanage-db';\n  private readonly DB_VERSION = 1;\n  private ready$: Observable;\n\n  constructor() {\n    this.ready$ = from(this.initDB());\n  }\n\n  private async initDB() {\n    try {\n      this.db = await openDB(this.DB_NAME, this.DB_VERSION, {\n        upgrade(db: IDBPDatabase) {\n          if (!db.objectStoreNames.contains('users')) {\n            const userStore = db.createObjectStore('users', { keyPath: 'id', autoIncrement: true });\n            userStore.createIndex('by-email', 'email', { unique: false });\n          }\n\n          if (!db.objectStoreNames.contains('files')) {\n            const fileStore = db.createObjectStore('files', { keyPath: 'id', autoIncrement: true });\n            fileStore.createIndex('by-user', 'user_id');\n            fileStore.createIndex('by-overview', 'overview', { unique: false });\n          }\n        }\n      });\n\n       initializeDatabase(this);\n    } catch (error) {\n      console.error('Error initializing IndexedDB:', error);\n      throw error;\n    }\n  }\n\n  private ensureDB(): Observable {\n    return this.ready$.pipe(\n      tap(() => {\n        if (!this.db) {\n          throw new Error('Database not initialized');\n        }\n      })\n    );\n  }\n\n  addUser(user: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('users', {\n        ...user,\n        created_at: new Date(),\n        updated_at: new Date()\n      }))),\n      map(id => ({ ...user, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getUserByEmail(email: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => users.find(user => user.email.includes(email))),\n      tap(user => console.log('Retrieved user:', user))\n    );\n  }\n\n  getAllUsers(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users')))\n    );\n  }\n\n  addFile(file: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('files', {\n        ...file,\n        created_on: new Date(),\n        updated_on: new Date()\n      }))),\n      map(id => ({ ...file, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding file:', error);\n        throw error;\n      })\n    );\n  }\n\n  getFilesByUser(userId: string): Observable {\n    console.log('Getting files for userId:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => {\n        console.log('Database ready, querying files...');\n        return from(this.db!.getAll('files'));\n      }),\n      map(files => files.filter(file => file.user_id == userId)),\n      tap((files: File[]) => {\n        console.log('Retrieved files:', files);\n        if (!files || files.length === 0) {\n          console.log('No files found for user:', userId);\n        }\n      }),\n      catchError(error => {\n        console.error('Error getting files by user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getAuthorName(userId: string): Observable {\n    console.log('Looking for user with ID:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => {\n        let user = users.find(u => u.id === userId);\n                if (!user) {\n          const numericId = parseInt(userId, 10);\n          if (!isNaN(numericId)) {\n            user = users.find(u => parseInt(u.id || '', 10) === numericId);\n          }\n        }\n        return user?.name || 'Unknown Author';\n      }),\n    );\n  }\n  \n\n  getAllFiles(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('files')))\n    );\n  }\n\n  deleteFile(fileId: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('files', fileId)))\n    );\n  }\n\n  getUserById(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      map(user => user || null)\n    );\n  }\n\n  updateUser(id: string, data: Partial): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      switchMap(existingUser => {\n        if (!existingUser) throw new Error('User not found');\n        const updatedUser = { ...existingUser, ...data, updated_at: new Date() };\n        return from(this.db!.put('users', updatedUser)).pipe(\n          map(() => updatedUser)\n        );\n      }),\n      catchError(error => {\n        console.error('Error updating user:', error);\n        throw error;\n      })\n    );\n  }\n\n  deleteUser(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('users', id))),\n      catchError(error => {\n        console.error('Error deleting user:', error);\n        throw error;\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingScreenComponent.html":{"url":"components/LoadingScreenComponent.html","title":"component - LoadingScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/loading-screen/loading-screen.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-screen\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n    .loading-container {\n      height: 100vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #f5f5f5;\n    }\n    .loading-content {\n      text-align: center;\n    }\n    .spinner {\n      width: 50px;\n      height: 50px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #3498db;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin: 20px auto;\n    }\n    .error {\n      color: red;\n      margin-top: 10px;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  \n            \n\n            \n                template\n                \n  \n    Initializing Database...\n    \n    {{ error }}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeDatabase\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dbService: IndexedDBService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/loading-screen/loading-screen.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        IndexedDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loading-screen/loading-screen.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loading-screen/loading-screen.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/loading-screen/loading-screen.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IndexedDBService } from '../../services/indexed-db.service';\nimport { initializeDatabase } from '../../commons/initializers/db-initial';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-loading-screen',\n  imports: [CommonModule],\n  template: `\n    \n      \n        Initializing Database...\n        \n        {{ error }}\n      \n    \n  `,\n  styles: [`\n    .loading-container {\n      height: 100vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #f5f5f5;\n    }\n    .loading-content {\n      text-align: center;\n    }\n    .spinner {\n      width: 50px;\n      height: 50px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #3498db;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin: 20px auto;\n    }\n    .error {\n      color: red;\n      margin-top: 10px;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `]\n})\nexport class LoadingScreenComponent implements OnInit {\n  error: string | null = null;\n\n  constructor(\n    private router: Router,\n    private dbService: IndexedDBService\n  ) {}\n\n  ngOnInit() {\n    this.initializeDatabase();\n  }\n\n  private initializeDatabase() {\n    initializeDatabase(this.dbService).subscribe({\n      next: () => {\n        this.router.navigate(['/login']);\n      },\n      error: (err) => {\n        console.error('Database initialization failed:', err);\n        this.error = 'Failed to initialize database. Please refresh the page.';\n      }\n    });\n  }\n} \n    \n\n\n    \n            \n    .loading-container {\n      height: 100vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #f5f5f5;\n    }\n    .loading-content {\n      text-align: center;\n    }\n    .spinner {\n      width: 50px;\n      height: 50px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #3498db;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin: 20px auto;\n    }\n    .error {\n      color: red;\n      margin-top: 10px;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Initializing Database...        {{ error }}  '\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                FooterComponent\n                \n            \n\n            \n                styleUrls\n                ./login.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                hidePassword\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailDomainValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (control: any) => { invalidEmailDomain: boolean; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\nimport { FooterComponent } from '../../commons/components/footer/footer';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FooterComponent],\n  templateUrl: './login.html',\n  styleUrls: ['./login.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  error = '';\n  hidePassword = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  emailDomainValidator() {\n    return (control: any) => {\n      const email = control.value;\n      if (!email) return null;\n\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const isValid = emailRegex.test(email);\n\n      return isValid ? null : { invalidEmailDomain: true };\n    };\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.authService.login(this.f['email'].value, this.f['password'].value).subscribe({\n      next: (success) => {\n        if (success) {\n          this.router.navigate(['/files']);\n        } else {\n          this.error = 'Invalid email or password';\n        }\n        this.loading = false;\n      },\n      error: (err) => {\n        console.error('Login error:', err);\n        this.error = 'An error occurred during login';\n        this.loading = false;\n      }\n    });\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n} \n    \n\n    \n        \n    \n        \n            Login\n            \n                \n                    Email\n                    \n                    \n                        Email is required\n                        Please enter a valid email address\n                    \n                \n                \n                    Password\n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        Password is required\n                        Password must be at least 8 characters\n                    \n                \n                \n                    {{ error }}\n                \n                \n                    \n                    Sign in\n                \n            \n        \n        &copy; 2025 ALL RIGHTS RESERVED -->\n            \n    \n    \n        \n        \n            \n        \n    \n  \n  \n    \n\n    \n                \n                    ./login.scss\n                \n                @use '../../../styles.scss' as *;\n\n:host {\n    display: block;\n}\n\n.login-container {\n    display: flex;\n    min-height: 100vh;\n}\n\n.login-image-section {\n    flex: 1;\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: top;\n    background-color: var(--accent-color);\n}\n\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.logo-overlay {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n}\n\n.logo {\n  margin-top: 30px;\n  min-width: 150px;\n  max-width: 280px;\n  height: min-content;\n}\n\n.login-form-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n  width: 100%;\n  background-color: var(--secondary-color);\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.form-container{\n    min-width: 450px;\n}\n\n.login-form-section h2 {\n  margin-bottom: 20px;\n  font-size: 2rem;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  font-size: 14px;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n}\n\n.form-group input.is-invalid {\n  border-color: var(--error-color);\n}\n\n.invalid-feedback {\n  color: var(--error-color);\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.alert {\n  padding: 10px;\n  margin-bottom: 15px;\n  border-radius: 4px;\n}\n\n.alert-danger {\n  background-color: var(--error-bg);\n  border: 1px solid var(--error-border);\n  color: var(--error-text);\n}\n\nbutton[type=\"submit\"] {\n  width: 100%;\n  padding: 10px;\n  background-color: var(--button-primary);\n  color: var(--secondary-color);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1em;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: var(--button-hover);\n}\n\nbutton[type=\"submit\"]:disabled {\n  background-color: var(--border-color);\n  cursor: not-allowed;\n}\n\n.copyright {\n  font-size: 0.9em;\n  color: var(--text-secondary);\n  text-align: center;\n  position: absolute;\n  bottom: 10px;\n}\n\n.password-input-container {\n    position: relative;\n    width: 100%;\n\n    input {\n        width: 100%;\n        padding-right: 40px; // Make room for the eye icon\n    }\n\n    .password-toggle {\n        position: absolute;\n        right: 10px;\n        top: 50%;\n        transform: translateY(-50%);\n        cursor: pointer;\n        color: #666;\n        transition: color 0.3s ease;\n\n        &:hover {\n            color: #333;\n        }\n\n        i {\n            font-size: 12px;\n        }\n    }\n}\n\n/* Responsive styles */\n@media (max-width: 900px) {\n  .login-container {\n    flex-direction: column-reverse;\n  }\n\n  .login-image-section {\n    height: 200px; /* Adjust height for mobile */\n  }\n\n  .login-form-section {\n    padding: 20px;\n  }\n\n  .form-container{\n    min-width: unset;\n    width: 100%;\n  }\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Login                                                Email                                                                Email is required                        Please enter a valid email address                                                                        Password                                                                                                                                                                                        Password is required                        Password must be at least 8 characters                                                                        {{ error }}                                                                        Sign in                                            © 2025 ALL RIGHTS RESERVED -->                                                                '\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth.guard.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n      return false;\n    }\n    return true;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    console.log(this.authService.isAuthenticated())\n\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/files']);\n      return false;\n    }\n    return true;\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhoneNumberPipe.html":{"url":"pipes/PhoneNumberPipe.html","title":"pipe - PhoneNumberPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PhoneNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/commons/pipes/phone-number.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        phoneNumber\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/pipes/phone-number.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'phoneNumber',\n  standalone: true\n})\nexport class PhoneNumberPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    \n    const digits = value.replace(/\\D/g, '');\n    \n    if (digits.length === 10) {\n      return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\n    }\n    \n    return value;\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableAction.html":{"url":"interfaces/TableAction.html","title":"interface - TableAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/components/custom-table/custom-table.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nexport interface TableColumn {\n  key: string;\n  label: string;\n  type?: 'text' | 'date' | 'number' | 'action';\n  sortable?: boolean;\n  width?: string;\n  customClass?: string;\n}\n\nexport interface TableAction {\n  label: string;\n  icon?: string;\n  action: string;\n  class?: string;\n}\n\n@Component({\n  selector: 'app-custom-table',\n  templateUrl: './custom-table.html',\n  styleUrls: ['./custom-table.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class CustomTableComponent {\n  // Input signals\n  private _columns = signal([]);\n  private _data = signal([]);\n  private _totalItems = signal(0);\n  private _currentPage = signal(1);\n  private _pageSize = signal(5);\n  private _actions = signal([]);\n  private _loading = signal(false);\n  private _emptyMessage = signal('No data available');\n\n  // Computed values\n  get displayedColumns() {\n    return [\n      ...this._columns().map(col => col.key),\n      ...(this._actions().length > 0 ? ['actions'] : [])\n    ];\n  }\n\n  get totalPages() {\n    return Math.ceil(this._totalItems() / this._pageSize());\n  }\n\n  get paginationPages() {\n    const pages: (number | string)[] = [];\n    const total = this.totalPages;\n    const current = this._currentPage();\n\n    if (total  4) pages.push('...');\n      for (let i = Math.max(2, current - 2); i ();\n  @Output() actionClick = new EventEmitter();\n\n  get data() { return this._data(); }\n  get loading() { return this._loading(); }\n  get emptyMessage() { return this._emptyMessage(); }\n  get currentPage() { return this._currentPage(); }\n  get pageSize() { return this._pageSize(); }\n  get actions() { return this._actions(); }\n  get columns() { return this._columns(); }\n\n  goToPage(page: number) {\n    if (page  this.totalPages || page === this._currentPage()) return;\n    this.onPageChange({ pageIndex: page - 1, pageSize: this._pageSize(), length: this._totalItems() });\n  }\n\n  onPageSizeChange(event: Event) {\n    const newSize = +(event.target as HTMLSelectElement).value;\n    this._currentPage.set(1);\n    this.pageChange.emit({ pageIndex: 0, pageSize: newSize, length: this._totalItems() });\n  }\n\n  onActionClick(action: string, item: any): void {\n    this.actionClick.emit({ action, item });\n  }\n\n  onPageChange(event: PageEvent) {\n    this.pageChange.emit(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn.html":{"url":"interfaces/TableColumn.html","title":"interface - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/components/custom-table/custom-table.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customClass\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"text\" | \"date\" | \"number\" | \"action\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"text\" | \"date\" | \"number\" | \"action\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nexport interface TableColumn {\n  key: string;\n  label: string;\n  type?: 'text' | 'date' | 'number' | 'action';\n  sortable?: boolean;\n  width?: string;\n  customClass?: string;\n}\n\nexport interface TableAction {\n  label: string;\n  icon?: string;\n  action: string;\n  class?: string;\n}\n\n@Component({\n  selector: 'app-custom-table',\n  templateUrl: './custom-table.html',\n  styleUrls: ['./custom-table.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class CustomTableComponent {\n  // Input signals\n  private _columns = signal([]);\n  private _data = signal([]);\n  private _totalItems = signal(0);\n  private _currentPage = signal(1);\n  private _pageSize = signal(5);\n  private _actions = signal([]);\n  private _loading = signal(false);\n  private _emptyMessage = signal('No data available');\n\n  // Computed values\n  get displayedColumns() {\n    return [\n      ...this._columns().map(col => col.key),\n      ...(this._actions().length > 0 ? ['actions'] : [])\n    ];\n  }\n\n  get totalPages() {\n    return Math.ceil(this._totalItems() / this._pageSize());\n  }\n\n  get paginationPages() {\n    const pages: (number | string)[] = [];\n    const total = this.totalPages;\n    const current = this._currentPage();\n\n    if (total  4) pages.push('...');\n      for (let i = Math.max(2, current - 2); i ();\n  @Output() actionClick = new EventEmitter();\n\n  get data() { return this._data(); }\n  get loading() { return this._loading(); }\n  get emptyMessage() { return this._emptyMessage(); }\n  get currentPage() { return this._currentPage(); }\n  get pageSize() { return this._pageSize(); }\n  get actions() { return this._actions(); }\n  get columns() { return this._columns(); }\n\n  goToPage(page: number) {\n    if (page  this.totalPages || page === this._currentPage()) return;\n    this.onPageChange({ pageIndex: page - 1, pageSize: this._pageSize(), length: this._totalItems() });\n  }\n\n  onPageSizeChange(event: Event) {\n    const newSize = +(event.target as HTMLSelectElement).value;\n    this._currentPage.set(1);\n    this.pageChange.emit({ pageIndex: 0, pageSize: newSize, length: this._totalItems() });\n  }\n\n  onActionClick(action: string, item: any): void {\n    this.actionClick.emit({ action, item });\n  }\n\n  onPageChange(event: PageEvent) {\n    this.pageChange.emit(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Toast.html":{"url":"interfaces/Toast.html","title":"interface - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/services/toast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            show\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"success\" | \"error\" | \"info\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\" | \"info\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Toast {\n  message: string;\n  type: 'success' | 'error' | 'info';\n  show: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  private toastSubject = new BehaviorSubject({ message: '', type: 'success', show: false });\n  toast$ = this.toastSubject.asObservable();\n\n  showSuccess(message: string) {\n    this.showToast(message, 'success');\n  }\n\n  showError(message: string) {\n    this.showToast(message, 'error');\n  }\n\n  showInfo(message: string) {\n    this.showToast(message, 'info');\n  }\n\n  private showToast(message: string, type: 'success' | 'error' | 'info') {\n    this.toastSubject.next({ message, type, show: true });\n    setTimeout(() => {\n      this.hideToast();\n    }, 3000);\n  }\n\n  hideToast() {\n    this.toastSubject.next({ message: '', type: 'success', show: false });\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/commons/components/toast-notification/toast-notification.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./toast-notification.scss\n            \n\n\n\n            \n                templateUrl\n                ./toast-notification.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toastService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/commons/components/toast-notification/toast-notification.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toastService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/commons/components/toast-notification/toast-notification.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ToastService } from '../../services/toast.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toast',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: `./toast-notification.html`,\n  styleUrls: [`./toast-notification.scss`]\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n} \n    \n\n    \n        toast-notification works! -->\n\n\n\n{{ toast.message }}\n\n\n    \n\n    \n                \n                    ./toast-notification.scss\n                \n                .toast {\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    padding: 15px 25px;\n    border-radius: 4px;\n    color: white;\n    font-size: 14px;\n    z-index: 1000;\n    opacity: 0;\n    transform: translateY(-20px);\n    transition: all 0.3s ease;\n  }\n\n  .toast.show {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  .toast-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  .toast.success {\n    background-color: #4CAF50;\n  }\n\n  .toast.error {\n    background-color: #f44336;\n  }\n\n  .toast.info {\n    background-color: #2196F3;\n  }\n\n  i {\n    font-size: 18px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'toast-notification works! -->{{ toast.message }}'\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/services/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toast$\n                            \n                            \n                                    Private\n                                toastSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideToast\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                    Private\n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hideToast\n                        \n                    \n                \n            \n            \n                \nhideToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/services/toast.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/services/toast.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/services/toast.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/services/toast.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string, type: \"success\" | \"error\" | \"info\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/commons/services/toast.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toast$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.toastSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/commons/services/toast.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({ message: '', type: 'success', show: false })\n                    \n                \n                    \n                        \n                                Defined in src/app/commons/services/toast.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Toast {\n  message: string;\n  type: 'success' | 'error' | 'info';\n  show: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  private toastSubject = new BehaviorSubject({ message: '', type: 'success', show: false });\n  toast$ = this.toastSubject.asObservable();\n\n  showSuccess(message: string) {\n    this.showToast(message, 'success');\n  }\n\n  showError(message: string) {\n    this.showToast(message, 'error');\n  }\n\n  showInfo(message: string) {\n    this.showToast(message, 'info');\n  }\n\n  private showToast(message: string, type: 'success' | 'error' | 'info') {\n    this.toastSubject.next({ message, type, show: true });\n    setTimeout(() => {\n      this.hideToast();\n    }, 3000);\n  }\n\n  hideToast() {\n    this.toastSubject.next({ message: '', type: 'success', show: false });\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFileModal.html":{"url":"components/UploadFileModal.html","title":"component - UploadFileModal","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFileModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/files/components/upload/upload.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upload-file-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./upload.scss\n            \n\n\n\n            \n                templateUrl\n                ./upload.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                overview\n                            \n                            \n                                selectedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onDragOver\n                            \n                            \n                                onDrop\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeFile\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: IndexedDBService, authService: AuthService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/files/components/upload/upload.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        IndexedDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/files/components/upload/upload.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/files/components/upload/upload.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/components/upload/upload.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \nonDragOver(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/components/upload/upload.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrop\n                        \n                    \n                \n            \n            \n                \nonDrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/components/upload/upload.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/components/upload/upload.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/components/upload/upload.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/files/components/upload/upload.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        overview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/components/upload/upload.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/files/components/upload/upload.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { IndexedDBService } from '../../../../services/indexed-db.service';\nimport { AuthService } from '../../../../services/auth.service';\nimport { FormsModule } from '@angular/forms';\nimport { ToastService } from '../../../../commons/services/toast.service';\n\n@Component({\n  selector: 'app-upload-file-modal',\n  imports: [CommonModule,FormsModule],\n  templateUrl: './upload.html',\n  styleUrls: ['./upload.scss'],\n  standalone: true\n})\nexport class UploadFileModal {\n  selectedFile: File | null = null;\n  @Output() closed = new EventEmitter();\n  overview: string = '';\n  @Output() uploaded = new EventEmitter();\n\n  constructor(private dbService: IndexedDBService, private authService: AuthService, private toastService: ToastService) {}\n  close() {\n    this.closed.emit();\n  }\n\n  onFileSelected(event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      this.selectedFile = input.files[0];\n    }\n  }\n\n  onDragOver(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onDrop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer && event.dataTransfer.files.length > 0) {\n      this.selectedFile = event.dataTransfer.files[0];\n    }\n  }\n\n  removeFile() {\n    this.selectedFile = null;\n  }\n\n  onSubmit() {\n    if (this.selectedFile) {\n      const currentUser = this.authService.currentUserValue;\n      const sizeInMB = (this.selectedFile.size / (1024 * 1024)).toFixed(2) + ' MB';\n\n      this.dbService.addFile({\n        name: this.selectedFile.name,\n        type: this.selectedFile.name.split('.').pop()?.toLowerCase() || '',\n        size: sizeInMB,\n        url: '',\n        data: this.selectedFile,\n        user_id: currentUser?.id || '',\n        overview: this.overview || 'No overview provided'\n      }).subscribe({\n        next: () => {\n          this.toastService.showSuccess('File uploaded successfully!');\n          this.close();\n          this.uploaded.emit();\n        },\n        error: (error) => {\n          console.error('Error uploading file:', error);\n          this.toastService.showError('Failed to upload file. Please try again.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n      \n    \n    Browse Files to upload\n  \n  \n    📄 -->\n    {{ selectedFile.name }}\n    \n      \n    \n  \n  \n  \n    Submit\n  \n\n\n    \n\n    \n                \n                    ./upload.scss\n                \n                .modal-backdrop {\n  position: fixed;\n  inset: 0;\n  background: rgba(0,0,0,0.18);\n  z-index: 1000;\n}\n\n.upload-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: 90vw;\n  max-width: 800px;\n  min-width: 0;\n  background: #fff;\n  border-radius: 24px;\n  box-shadow: 0 8px 32px rgba(0,0,0,0.12);\n  transform: translate(-50%, -50%);\n  z-index: 1001;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.close-btn {\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: #888;\n  cursor: pointer;\n}\n\n.drop-area {\n  width: 100%;\n  min-width: 0;\n  height: 32vw;\n  max-height: 220px;\n  min-height: 120px;\n  border: 2.5px dashed #1976d2;\n  border-radius: 18px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-bottom: 24px;\n  background: #f8fbff;\n  transition: border-color 0.2s;\n}\n\n.drop-area:hover {\n  border-color: #1565c0;\n}\n\n.cloud-icon {\n  margin-bottom: 12px;\n}\n\n.drop-text {\n  font-size: 1.18rem;\n  color: #222;\n  font-weight: 500;\n}\n\n.file-preview {\n  width: 100%;\n  background: #eaf2ff;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n  padding: 12px 10px;\n  margin-top: 12px;\n  font-size: 1rem;\n  color: #222;\n  gap: 8px;\n  word-break: break-all;\n}\n\n.file-icon {\n  font-size: 1.5rem;\n  color: #1976d2;\n}\n\n.file-name {\n  flex: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #333;\n  font-size: 1.2rem;\n  cursor: pointer;\n  margin-left: 8px;\n}\n\n.submit-btn {\n  width: 100%;\n  margin-top: 18px;\n  background: #1976d2;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 0;\n  font-size: 1.1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n.submit-btn:disabled {\n  background: #b3c6e6;\n  cursor: not-allowed;\n}\n\n.overview-input {\n  width: 100%;\n  margin-top: 12px;\n  padding: 8px 10px;\n  border-radius: 6px;\n  border: 1px solid #e0e0e0;\n  font-size: 1rem;\n  background: #f8fbff;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .upload-modal {\n    width: 98vw;\n    max-width: 98vw;\n    padding: 12px 2vw 12px 2vw;\n    border-radius: 12px;\n    transform: translate(0%, 0%);\n    top:200px;\n    left:0;\n  }\n  .drop-area {\n    height: 38vw;\n    max-height: 160px;\n    min-height: 80px;\n    border-radius: 10px;\n    font-size: 0.95rem;\n  }\n  .file-preview {\n    font-size: 0.95rem;\n    padding: 8px 4px;\n    border-radius: 8px;\n  }\n  .submit-btn {\n    font-size: 1rem;\n    padding: 10px 0;\n    border-radius: 6px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Browse Files to upload        📄 -->    {{ selectedFile.name }}                        Submit  '\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UploadFileModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/indexed-db.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            contact\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            date_of_birth\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contact:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_of_birth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date_of_birth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"admin\" | \"user\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"user\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { Observable, from, defer } from 'rxjs';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { initializeDatabase } from '../commons/initializers/db-initial';\n\ninterface FManageDB extends DBSchema {\n  users: {\n    key: string;\n    value: User;\n    indexes: { 'by-email': string };\n  };\n  files: {\n    key: string;\n    value: File;\n    indexes: { 'by-user': string, 'by-overview': string };\n  };\n}\n\nexport interface User {\n  id?: string;\n  email: string[];\n  password: string;\n  name: string;\n  role: 'admin' | 'user';\n  date_of_birth: string;\n  gender: string;\n  address: string[];\n  contact: string[];\n  created_at?: Date;\n  updated_at?: Date;\n}\n\nexport interface File {\n  id?: string;\n  name: string;\n  type: string;\n  size: string;\n  url: string;\n  data?: Blob;\n  user_id: string;\n  overview: string;\n  created_on?: Date;\n  updated_on?: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBService {\n  private db: IDBPDatabase | null = null;\n  private readonly DB_NAME = 'fmanage-db';\n  private readonly DB_VERSION = 1;\n  private ready$: Observable;\n\n  constructor() {\n    this.ready$ = from(this.initDB());\n  }\n\n  private async initDB() {\n    try {\n      this.db = await openDB(this.DB_NAME, this.DB_VERSION, {\n        upgrade(db: IDBPDatabase) {\n          if (!db.objectStoreNames.contains('users')) {\n            const userStore = db.createObjectStore('users', { keyPath: 'id', autoIncrement: true });\n            userStore.createIndex('by-email', 'email', { unique: false });\n          }\n\n          if (!db.objectStoreNames.contains('files')) {\n            const fileStore = db.createObjectStore('files', { keyPath: 'id', autoIncrement: true });\n            fileStore.createIndex('by-user', 'user_id');\n            fileStore.createIndex('by-overview', 'overview', { unique: false });\n          }\n        }\n      });\n\n       initializeDatabase(this);\n    } catch (error) {\n      console.error('Error initializing IndexedDB:', error);\n      throw error;\n    }\n  }\n\n  private ensureDB(): Observable {\n    return this.ready$.pipe(\n      tap(() => {\n        if (!this.db) {\n          throw new Error('Database not initialized');\n        }\n      })\n    );\n  }\n\n  addUser(user: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('users', {\n        ...user,\n        created_at: new Date(),\n        updated_at: new Date()\n      }))),\n      map(id => ({ ...user, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getUserByEmail(email: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => users.find(user => user.email.includes(email))),\n      tap(user => console.log('Retrieved user:', user))\n    );\n  }\n\n  getAllUsers(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users')))\n    );\n  }\n\n  addFile(file: Omit): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.add('files', {\n        ...file,\n        created_on: new Date(),\n        updated_on: new Date()\n      }))),\n      map(id => ({ ...file, id: id.toString() })),\n      catchError(error => {\n        console.error('Error adding file:', error);\n        throw error;\n      })\n    );\n  }\n\n  getFilesByUser(userId: string): Observable {\n    console.log('Getting files for userId:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => {\n        console.log('Database ready, querying files...');\n        return from(this.db!.getAll('files'));\n      }),\n      map(files => files.filter(file => file.user_id == userId)),\n      tap((files: File[]) => {\n        console.log('Retrieved files:', files);\n        if (!files || files.length === 0) {\n          console.log('No files found for user:', userId);\n        }\n      }),\n      catchError(error => {\n        console.error('Error getting files by user:', error);\n        throw error;\n      })\n    );\n  }\n\n  getAuthorName(userId: string): Observable {\n    console.log('Looking for user with ID:', userId);\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('users'))),\n      map(users => {\n        let user = users.find(u => u.id === userId);\n                if (!user) {\n          const numericId = parseInt(userId, 10);\n          if (!isNaN(numericId)) {\n            user = users.find(u => parseInt(u.id || '', 10) === numericId);\n          }\n        }\n        return user?.name || 'Unknown Author';\n      }),\n    );\n  }\n  \n\n  getAllFiles(): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.getAll('files')))\n    );\n  }\n\n  deleteFile(fileId: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('files', fileId)))\n    );\n  }\n\n  getUserById(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      map(user => user || null)\n    );\n  }\n\n  updateUser(id: string, data: Partial): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.get('users', id))),\n      switchMap(existingUser => {\n        if (!existingUser) throw new Error('User not found');\n        const updatedUser = { ...existingUser, ...data, updated_at: new Date() };\n        return from(this.db!.put('users', updatedUser)).pipe(\n          map(() => updatedUser)\n        );\n      }),\n      catchError(error => {\n        console.error('Error updating user:', error);\n        throw error;\n      })\n    );\n  }\n\n  deleteUser(id: string): Observable {\n    return this.ensureDB().pipe(\n      switchMap(() => from(this.db!.delete('users', id))),\n      catchError(error => {\n        console.error('Error deleting user:', error);\n        throw error;\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Users.html":{"url":"components/Users.html","title":"component - Users","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/users.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                                CustomTableComponent\n                                AddEditUser\n                                ToastComponent\n                \n            \n\n            \n                styleUrls\n                ./users.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                columns\n                            \n                            \n                                currentPage\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                loading\n                            \n                            \n                                newAddress\n                            \n                            \n                                newContact\n                            \n                            \n                                newEmail\n                            \n                            \n                                pageSize\n                            \n                            \n                                paginatedUsers\n                            \n                            \n                                    Private\n                                searchDebounceTimeout\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                showUserModal\n                            \n                            \n                                totalItems\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onActionClick\n                            \n                            \n                                onAddUser\n                            \n                            \n                                onPageChange\n                            \n                            \n                                onSearchChange\n                            \n                            \n                                onUserSaved\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: IndexedDBService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/users.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        IndexedDBService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onActionClick\n                        \n                    \n                \n            \n            \n                \nonActionClick(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddUser\n                        \n                    \n                \n            \n            \n                \nonAddUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchChange\n                        \n                    \n                \n            \n            \n                \nonSearchChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserSaved\n                        \n                    \n                \n            \n            \n                \nonUserSaved()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableAction[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      label: 'Edit',\n      action: 'edit',\n      class: 'edit',\n      icon: 'bi-pencil'\n    },\n    {\n      label: 'Delete',\n      action: 'delete',\n      class: 'delete',\n      icon: 'bi-trash'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { key: 'name', label: 'Name' },\n    { key: 'email', label: 'Email' },\n    { key: 'role', label: 'Role' },\n    { key: 'address', label: 'Location' },\n    { key: 'created_at', label: 'Created', type: 'date' },\n    { key: 'updated_at', label: 'Edited', type: 'date' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newContact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(10)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const start = (this.currentPage() - 1) * this.pageSize();\n    const end = start + this.pageSize();\n    return this.filteredUsers().slice(start, end).map(user => ({\n      ...user,\n      email: user.email.join(' + '),\n      address: user.address[0] + (user.address.length > 1 ? ` + ${user.address.length - 1} more` : '')\n    }));\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchDebounceTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.filteredUsers().length)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, FormBuilder, FormGroup, FormArray, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from '../../commons/components/header/header';\nimport { CustomTableComponent, TableColumn, TableAction } from '../../commons/components/custom-table/custom-table';\nimport { IndexedDBService, User } from '../../services/indexed-db.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AddEditUser } from './add-edit-user/add-edit-user';\nimport { FooterComponent } from '../../commons/components/footer/footer';\nimport { ToastComponent } from '../../commons/components/toast-notification/toast-notification';\nimport { ToastService } from '../../commons/services/toast.service';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HeaderComponent, CustomTableComponent , AddEditUser , \n    // FooterComponent, \n    ToastComponent],\n  templateUrl: \"./users.html\",\n  styleUrls: [\"./users.scss\"],\n})\nexport class Users implements OnInit {\n  users = signal([]);\n  currentPage = signal(1);\n  pageSize = signal(10);\n  loading = signal(false);\n  searchTerm = signal('');\n  private searchDebounceTimeout: any;\n  showUserModal = false;\n  selectedUserId: string | null = null;\n  newEmail = '';\n  newContact = '';\n  newAddress = '';\n\n  columns: TableColumn[] = [\n    { key: 'name', label: 'Name' },\n    { key: 'email', label: 'Email' },\n    { key: 'role', label: 'Role' },\n    { key: 'address', label: 'Location' },\n    { key: 'created_at', label: 'Created', type: 'date' },\n    { key: 'updated_at', label: 'Edited', type: 'date' }\n  ];\n\n  actions: TableAction[] = [\n    {\n      label: 'Edit',\n      action: 'edit',\n      class: 'edit',\n      icon: 'bi-pencil'\n    },\n    {\n      label: 'Delete',\n      action: 'delete',\n      class: 'delete',\n      icon: 'bi-trash'\n    }\n  ];\n\n  filteredUsers = signal([]);\n  \n  paginatedUsers = computed(() => {\n    const start = (this.currentPage() - 1) * this.pageSize();\n    const end = start + this.pageSize();\n    return this.filteredUsers().slice(start, end).map(user => ({\n      ...user,\n      email: user.email.join(' + '),\n      address: user.address[0] + (user.address.length > 1 ? ` + ${user.address.length - 1} more` : '')\n    }));\n  });\n\n  totalItems = computed(() => this.filteredUsers().length);\n\n  constructor(private dbService: IndexedDBService, private toastService: ToastService) {}\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.loading.set(true);\n    this.dbService.getAllUsers().subscribe({\n      next: (users) => {\n        this.users.set(users);\n        this.applyFilters();\n        this.loading.set(false);\n      },\n      error: () => this.loading.set(false)\n    });\n  }\n\n  onPageChange(event: PageEvent) {\n    this.currentPage.set(event.pageIndex + 1);\n    this.pageSize.set(event.pageSize);\n  }\n\n  onActionClick(event: { action: string, item: User }) {\n    if (event.action === 'edit') {\n      this.selectedUserId = event.item.id ?? null;\n      this.showUserModal = true;\n    } else if (event.action === 'delete') {\n      if (confirm('Are you sure you want to delete this user?')) {\n        if (event.item.id) {\n          this.dbService.deleteUser(event.item.id).subscribe({\n            next: () => {\n              this.loadUsers();\n              this.toastService.showSuccess('User deleted successfully');\n            },\n            error: (error: Error) => {\n              console.error('Error deleting user:', error);\n            }\n          });\n        }\n      }\n    }\n  }\n\n  onSearchChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    clearTimeout(this.searchDebounceTimeout);\n    this.searchDebounceTimeout = setTimeout(() => {\n      this.searchTerm.set(input.value);\n      this.currentPage.set(1);\n      this.applyFilters();\n    }, 300);\n  }\n\n  applyFilters() {\n    let filtered = this.users();\n    if (this.searchTerm()) {\n      const term = this.searchTerm().toLowerCase();\n      filtered = filtered.filter(user =>\n        user.name.toLowerCase().includes(term) ||\n        user.email.join(' ').toLowerCase().includes(term)\n      );\n    }\n    this.filteredUsers.set(filtered);\n  }\n\n  onAddUser() {\n    this.selectedUserId = null;\n    this.showUserModal = true;\n  }\n\n  onUserSaved() {\n    this.showUserModal = false;\n    this.loadUsers();\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n        \n            \n                \n                \n            \n            \n                + Add user\n            \n        \n\n        \n        \n\n        \n        \n    \n\n     -->\n\n    \n\n    \n                \n                    ./users.scss\n                \n                @use '../../../styles.scss' as *;\n\n:host {\n    display: block;\n}\n\n.users-container {\n    min-height: 100vh;\n    background-color: var(--background-color);\n}\n\n.users-content {\n    padding: 2rem;\n    // max-width: 1200px;\n    margin: 0 auto;\n}\n\n.users-toolbar {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.search-group {\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex: 1;\n  max-width: 320px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #e0e0e0;\n  border-radius: 6px;\n  font-size: 15px;\n  background: #fff;\n}\n\n.search-icon {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #888;\n  font-size: 16px;\n  pointer-events: none;\n}\n\n.add-user-btn {\n  margin-left: auto;\n  background: #111;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  padding: 8px 22px;\n  font-size: 16px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.add-user-btn:hover {\n  background: #222;\n}\n\n.plus-icon {\n  font-size: 20px;\n  font-weight: bold;\n  margin-right: 4px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                + Add user                                                             -->'\n    var COMPONENTS = [{'name': 'AddEditUser', 'selector': 'app-add-edit-user'},{'name': 'App', 'selector': 'app-root'},{'name': 'CustomTableComponent', 'selector': 'app-custom-table'},{'name': 'FilesCompoenent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UploadFileModal', 'selector': 'app-upload-file-modal'},{'name': 'Users', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Users'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/commons/components/custom-table/custom-table.ts\n            \n            component\n            CustomTableComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/commons/components/custom-table/custom-table.ts\n            \n            interface\n            TableAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/commons/components/custom-table/custom-table.ts\n            \n            interface\n            TableColumn\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/commons/components/footer/footer.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/commons/components/header/header.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/commons/components/toast-notification/toast-notification.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/commons/initializers/db-initial.ts\n            \n            function\n            initializeDatabase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/initializers/db-initial.ts\n            \n            function\n            readFileFromAssets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/initializers/db-initial.ts\n            \n            variable\n            FILE_PATHS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/initializers/db-initial.ts\n            \n            variable\n            initialFileMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/initializers/db-initial.ts\n            \n            variable\n            initialUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/commons/pipes/phone-number.pipe.ts\n            \n            pipe\n            PhoneNumberPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/commons/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/commons/services/toast.service.ts\n            \n            interface\n            Toast\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            function\n            filterFilesByCategory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            function\n            getFileCategory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            function\n            getMimeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            variable\n            DOC_EXTENSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            variable\n            FILE_CATEGORIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            variable\n            IMAGE_EXTENSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            variable\n            MIME_TYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            variable\n            VIDEO_EXTENSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/commons/utils/file.utils.ts\n            \n            type alias\n            FileCategory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/files/components/upload/upload.ts\n            \n            component\n            UploadFileModal\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/files/files.ts\n            \n            component\n            FilesCompoenent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/pages/loading-screen/loading-screen.component.ts\n            \n            component\n            LoadingScreenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/users/add-edit-user/add-edit-user.ts\n            \n            component\n            AddEditUser\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/pages/users/users.ts\n            \n            component\n            Users\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/indexed-db.service.ts\n            \n            injectable\n            IndexedDBService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/services/indexed-db.service.ts\n            \n            interface\n            File\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/indexed-db.service.ts\n            \n            interface\n            FManageDB\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/indexed-db.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.1\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.1\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            bootstrap-icons : ^1.13.1\n        \n            idb : ^8.0.3\n        \n            ngx-indexed-db : ^19.4.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            filterFilesByCategory   (src/.../file.utils.ts)\n                        \n                        \n                            getFileCategory   (src/.../file.utils.ts)\n                        \n                        \n                            getMimeType   (src/.../file.utils.ts)\n                        \n                        \n                            initializeDatabase   (src/.../db-initial.ts)\n                        \n                        \n                            readFileFromAssets   (src/.../db-initial.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/commons/utils/file.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterFilesByCategory\n                        \n                    \n                \n            \n            \n                \nfilterFilesByCategory(files, category: FileCategory)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            FileCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFileCategory\n                        \n                    \n                \n            \n            \n                \ngetFileCategory(fileType: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileCategory\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMimeType\n                        \n                    \n                \n            \n            \n                \ngetMimeType(extension: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/commons/initializers/db-initial.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeDatabase\n                        \n                    \n                \n            \n            \n                \ninitializeDatabase(dbService: IndexedDBService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbService\n                                            \n                                                            IndexedDBService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFileFromAssets\n                        \n                    \n                \n            \n            \n                \nreadFileFromAssets(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFManage\nThis project was generated using Angular CLI version 20.0.0.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileCategory   (src/.../file.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/commons/utils/file.utils.ts\n    \n    \n        \n            \n                \n                    \n                    FileCategory\n                \n            \n            \n                \n                        \"All\" | \"Video\" | \"Image\" | \"Doc\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            DOC_EXTENSIONS   (src/.../file.utils.ts)\n                        \n                        \n                            FILE_CATEGORIES   (src/.../file.utils.ts)\n                        \n                        \n                            FILE_PATHS   (src/.../db-initial.ts)\n                        \n                        \n                            IMAGE_EXTENSIONS   (src/.../file.utils.ts)\n                        \n                        \n                            initialFileMetadata   (src/.../db-initial.ts)\n                        \n                        \n                            initialUsers   (src/.../db-initial.ts)\n                        \n                        \n                            MIME_TYPES   (src/.../file.utils.ts)\n                        \n                        \n                            VIDEO_EXTENSIONS   (src/.../file.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/commons/utils/file.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOC_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'pdf', 'doc', 'docx', 'txt', 'rtf', 'odt',\n  'xls', 'xlsx', 'csv', 'ods', 'xlsm', 'xlsb',\n  'ppt', 'pptx', 'odp', 'pps', 'ppsx',\n  'md', 'tex', 'epub', 'mobi', 'azw3', 'fb2',\n  'odt', 'ods', 'odp', 'odg', 'odf',\n  'dot', 'dotx', 'xlt', 'xltx', 'pot', 'potx'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILE_CATEGORIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileCategory[]\n\n                    \n                \n                \n                    \n                        Default value : ['All', 'Video', 'Image', 'Doc']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IMAGE_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg',\n  'tiff', 'tif', 'ico', 'psd', 'ai', 'eps', 'raw',\n  'cr2', 'nef', 'arw', 'heic', 'heif', 'indd', 'ind'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MIME_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n  // Documents\n  'pdf': 'application/pdf',\n  'doc': 'application/msword',\n  'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'dot': 'application/msword',\n  'dotx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n  'xls': 'application/vnd.ms-excel',\n  'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  'xlsm': 'application/vnd.ms-excel.sheet.macroEnabled.12',\n  'xlsb': 'application/vnd.ms-excel.sheet.binary.macroEnabled.12',\n  'xlt': 'application/vnd.ms-excel',\n  'xltx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n  'ppt': 'application/vnd.ms-powerpoint',\n  'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'pps': 'application/vnd.ms-powerpoint',\n  'ppsx': 'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n  'pot': 'application/vnd.ms-powerpoint',\n  'potx': 'application/vnd.openxmlformats-officedocument.presentationml.template',\n  'txt': 'text/plain',\n  'rtf': 'application/rtf',\n  'csv': 'text/csv',\n  'md': 'text/markdown',\n  'tex': 'application/x-tex',\n  'epub': 'application/epub+zip',\n  'mobi': 'application/x-mobipocket-ebook',\n  'azw3': 'application/vnd.amazon.ebook',\n  'fb2': 'application/x-fictionbook+xml',\n  \n  // OpenDocument formats\n  'odt': 'application/vnd.oasis.opendocument.text',\n  'ods': 'application/vnd.oasis.opendocument.spreadsheet',\n  'odp': 'application/vnd.oasis.opendocument.presentation',\n  'odg': 'application/vnd.oasis.opendocument.graphics',\n  'odf': 'application/vnd.oasis.opendocument.formula',\n  \n  // Images\n  'jpg': 'image/jpeg',\n  'jpeg': 'image/jpeg',\n  'png': 'image/png',\n  'gif': 'image/gif',\n  'bmp': 'image/bmp',\n  'webp': 'image/webp',\n  'svg': 'image/svg+xml',\n  'tiff': 'image/tiff',\n  'tif': 'image/tiff',\n  'ico': 'image/x-icon',\n  'psd': 'image/vnd.adobe.photoshop',\n  'ai': 'application/postscript',\n  'eps': 'application/postscript',\n  'raw': 'image/x-raw',\n  'cr2': 'image/x-canon-cr2',\n  'nef': 'image/x-nikon-nef',\n  'arw': 'image/x-sony-arw',\n  'heic': 'image/heic',\n  'heif': 'image/heif',\n  'indd': 'application/x-indesign',\n  'ind': 'application/x-indesign',\n  \n  // Videos\n  'mp4': 'video/mp4',\n  'avi': 'video/x-msvideo',\n  'mov': 'video/quicktime',\n  'wmv': 'video/x-ms-wmv',\n  'flv': 'video/x-flv',\n  'mkv': 'video/x-matroska',\n  'webm': 'video/webm',\n  'm4v': 'video/x-m4v',\n  'mpg': 'video/mpeg',\n  'mpeg': 'video/mpeg',\n  '3gp': 'video/3gpp',\n  'mts': 'video/mp2t',\n  'm2ts': 'video/mp2t',\n  'ts': 'video/mp2t',\n  'vob': 'video/mpeg',\n  'ogv': 'video/ogg',\n  'mxf': 'application/mxf',\n  'asf': 'video/x-ms-asf',\n  'rm': 'application/vnd.rn-realmedia',\n  'rmvb': 'application/vnd.rn-realmedia-vbr',\n  'swf': 'application/x-shockwave-flash'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VIDEO_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'mp4', 'avi', 'mov', 'wmv', 'flv', 'mkv', 'webm',\n  'm4v', 'mpg', 'mpeg', '3gp', 'mts', 'm2ts', 'ts',\n  'vob', 'ogv', 'mxf', 'asf', 'rm', 'rmvb', 'swf'\n]\n                    \n                \n\n\n        \n    \n\n    src/app/commons/initializers/db-initial.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FILE_PATHS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  docx: 'assets/file-manager.docx',\n  pdf: 'assets/notification.pdf',\n  jpg: 'assets/Capture.PNG',\n  txt: 'assets/logos/dark-bg-logo.PNG'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialFileMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Omit[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Document of f-manage',\n    type: 'docx',\n    size: '2MB',\n    url: FILE_PATHS.docx,\n    user_id: '1',\n    overview: 'This is a sample PDF document containing important information about project A.'\n  },\n  {\n    name: 'Notification Document',\n    type: 'pdf',\n    size: '1.5MB',\n    url: FILE_PATHS.pdf,\n    user_id: '1',\n    overview: 'A detailed report document with project specifications and requirements.'\n  },\n  {\n    name: 'Header Image',\n    type: 'jpg',\n    size: '1MB',\n    url: FILE_PATHS.jpg,\n    user_id: '2',\n    overview: 'Product demonstration image showing the latest features and updates.'\n  },\n  {\n    name: 'Text File',\n    type: 'txt',\n    size: '0.5MB',\n    url: FILE_PATHS.txt,\n    user_id: '2',\n    overview: 'Meeting notes and action items from the last team discussion.'\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Omit[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    email: ['admin@fmanage.com'],\n    password: 'admin123',\n    name: 'Admin User',\n    role: 'admin' as const,\n    date_of_birth: '1990-01-01',\n    gender: 'male',\n    address: ['123 Admin St'],\n    contact: ['1234567890']\n  },\n  {\n    email: ['user@fmanage.com'],\n    password: 'user12345',\n    name: 'Regular User',\n    role: 'user' as const,\n    date_of_birth: '1995-05-15',\n    gender: 'female',\n    address: ['456 User Ave'],\n    contact: ['9876543210']\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
